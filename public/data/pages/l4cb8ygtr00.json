{"content":[{"type":"paragraph","crDate":1692191525761,"chDate":1692193538241,"text":"Jeder Eventlistener sendet ein Objekt an die Callback-Funktion bzw. Eventhandler, sobald er ausgelöst wird.\nDieses Objekt enthält Informationen wie den Auslöser und zusätzliche Daten, die mit dem Ereignis verbunden sind.\nDas Event-Objekt wird als einziger Parameter im Eventhandler angenommen. "},{"type":"code","crDate":1692192224296,"chDate":1692192368406,"text":"\nconst handleEvent = evt => {\n console.log(evt);\n console.log(evt.type);\n console.log(evt.target);\n console.log(evt.currentTarget);\n console.log(evt.timeStamp);\n console.log(evt.eventPhase);\n}\n\nelement.addEventListener('click', handleEvent)\n"},{"type":"subheader","crDate":1692192277705,"chDate":1692192283939,"text":"Attribute"},{"type":"paragraph","crDate":1692192373477,"chDate":1692195383709,"text":"Nicht alle Attribute sind bei allen Event-Typs zu finden.\n<b>evt.type</b>\nWelche Art von Event ausgelöst wurde.\n<b>evt.target</b>\nDas Element, das den Event ausgelöst hat. Das z.B. angeklickt oder berührt wurde.\n<b>evt.currentTarget</b>\nDas Element, das Eventlistener trägt. Für eine zuverlässige Ansprache anderer DOM-Elemente ist dies meist die bessere Wahl.\n<b>evt.timeStamp</b>\nDauer in ms seit dem vollständigen Laden der Seite.\n<b>evt.eventPhase</b>\nGibt die Phase des Ereignisflusses an. Mehr dazu siehe unter Bubbling.\n<b>key</b>\nInhalt der gedrückten Taste. Ist in allen Browsern der selbe Inhalt.\n<b>keyCode</b>\nCode der gedrückten Taste\n<b>shiftKey</b>\nBoolean, ob die Shift-Taste gedrückt ist\n<b>ctrlKey</b<\nBoolean, ob die Control-Taste gedrückt ist\n<b>altKey</b<\nBoolean, ob die Alt-Taste gedrückt ist\n<b>repeat</b>\nBoolean, ob die Taste gehalten wurde"},{"type":"subheader","crDate":1692192286619,"chDate":1692192291893,"text":"Mausposition"},{"type":"paragraph","crDate":1692193344942,"chDate":1692194753768,"text":"Aus dem Event-Objekt kann die Position der Maus zum Zeitpunkt des Events ausgelesen werden. Dies ist der einzige Weg, die aktuelle Mausposition zu lesen. \n<b>clientX / clientY</b>\nMausposition relativ zum Viewport\n<b>screenX / screenY</b>\nMausposition relativ zum Bildschirm\n<b>movementX / movementY</b>\nMausposition relativ zur Mausposition bei der letzten Bildschirmaktualisierung (\"Tick\")\n<b>layerX / layerY</b>\nMausposition relativ zum nächstgelegenen Element mit <i>position:relative</i>\n<b>pageX / pageY</b>\nMausposition relativ zur gesamten Webseite, unabhängig von der Scrollposition\n<b>screenX / screenY</b>\nMausposition relativ zum gesamten Bildschirm, unabhängig vom Browserfenster\n<b>x / y</b>\nEin Alias für pageX / pageY"},{"type":"subheader","crDate":1692195496157,"chDate":1692195506979,"text":"preventDefault()"},{"type":"paragraph","crDate":1692195613363,"chDate":1692195712733,"text":"Eine Methode, die das Standardverhalten (z.B. Neuladen der Seite bei Formular-Submit) unterdrückt."},{"type":"subheader","crDate":1692195532225,"chDate":1692195540093,"text":"stopPropagation"},{"type":"paragraph","crDate":1692195545968,"chDate":1692195990985,"text":"Eine Methode, die das <a href=\"/?id=4unslwcgjgu\">Bubbling</a> verhindert.\n"}]}