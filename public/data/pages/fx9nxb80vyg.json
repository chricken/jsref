{"content":[{"type":"paragraph","crDate":1722945238501,"chDate":1753785476570,"text":"React ist auf die Komponenten-Architektur fokussiert. Das hat zur Konsequenz, dass keine normalen Variablen verwendet werden sollen. Weder globale Variablen, noch welche innerhalb der Komponenten. Stattdessen werden alle in der Komponenten verwendeten Daten in einem <i>State</i> abgelegt.\nEin state ist eine spezielle Art von Variable, welche den Lebenszyklus einer Komponenten berücksichtigt. Daten werden zum richtigen Zeitpunkt in die Variable geschrieben. Eine Änderung der Variablen führt zu einer Aktualisierung der Komponenten.\nUm einen State anzulegen, wird die <i>useState()</i>-Methode verwendet.\nDie useState()-Methode wird aus dem <i>react</i>-Modul importiert."},{"type":"paragraph","crDate":1722947248555,"chDate":1753785535922,"text":"Die <i>useState()</i>-Methode gibt ein Array zurück, in der die Variable gespeichert ist sowie eine Funktion. \nÜblicherweise wird der Rückgabewert per <a href=\"/?id=ju1d49qun1c\">Destructuring</a> in zwei Variablen abgelegt.\nDie Variable kann ganz normal im Code und in Expressions verwendet werden. Um die Variable jedoch zu überschreiben, muss die dazugehörige Funktion verwendet werden.\nSo geschieht das Beschreiben im richtigen Augenblick des Lebenszyklus' und triggert die Aktualisierung der Komponenten."},{"type":"code","crDate":1722947660219,"chDate":1722947720305,"text":"import { useState } from 'react';\n\nconst App = () => {\n let [data, setData] = useState(100);\n\n const changeData = () => {\n  let num = ~~(Math.random() * 100);\n  setData(num); \n }\n\n return (\n  &lt;>\n   &lt;p> {data} &lt;/p>\n   &lt;p> &lt;button onClick={changeData}>Change&lt;/button> &lt;/p>\n  &lt;/>\n }\n}\n"}]}