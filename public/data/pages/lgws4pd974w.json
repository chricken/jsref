{"content":[{"type":"subheader","crDate":1683814385801,"chDate":1683814390840,"text":"Geschwindigkeit"},{"type":"paragraph","crDate":1683814395393,"chDate":1684225699324,"text":"Da Javascript ursprünglich vor allem für Anfänger entwickelt wurde, enthält diese Sprache einige Techniken, um den Einstieg zu erleichtern.\n- Hoisting\n- Schwache Typisierung\n- Hohe Fehlertoleranz\n- und mehr\n\nSo angenehm einige dieser Techniken auch sind, haben sie alle (vor allem die schwache Typisierung) einen negativen Einfluss auf die Performance. So ist Javascript heute eine der langsamsten Sprachen auf dem Markt. Aber gleichzeitig eine der am leichtesten zu erlernenden.\nZudem ist das Problem der Performance im täglichen Umgang nicht besonders auffällig, weil dank immer besserer Compiler der Code immer schneller ausgeführt wird. Außerdem sind die häufigsten Aufgaben von Javascript nicht besonders abhängig von der Ausführungsgeschwindigkeit."},{"type":"subheader","crDate":1684225733840,"chDate":1684225764763,"text":"Inkonsequente Syntax"},{"type":"paragraph","crDate":1684225768842,"chDate":1684226406106,"text":"Nach den ersten kleinen Programmen in JS fällt es schnell auf: Die Schreibweisen (Syntax) in Javascript sind nicht besonders konsequent umgesetzt. Da gibt es eine destruktive, andere nicht.destruktive Methoden. Das Entfernen einen Attribut aus einem Objekt wiederum ist vollkommen anders umgesetzt. \nDer Grund für alt wirkende Syntax ist der, dass die Syntax an einigen Stellen tatsächlich alt ist.\nJavascript hat das grundsätzliche Problem, dass der Code von einem Server geladen wird und auf einem anderen Computer (Client) ausgeführt wird. Daher ist beim Entwickeln unbekannt, auf welchem Browser und in welcher Version der Code später laufen soll. Wenn auf einem modernen Browser jahrealter Code ausgeführt werden soll, dann muss sichergestellt sein, dass dieser funktioniert. \nDaher darf die Schreibweise eines Befehles nicht nachträglich geändert werden. Und daher sind eine Funktionen und Methoden (z.B. \"delete\", \"Object.sort()\", etc.) mittlerweile nicht mehr ganz zeitgemäß.\nFalls es unbedingt gewünscht ist, nicht die alte Syntax zu verwenden, kann man sich fast immer mit einer selbstgebauten Methode behelfen, die per Prototyping in das Objekt eingebunden wird und hier die ungeliebte Technik maskiert."},{"type":"subheader","crDate":1684226582387,"chDate":1684226588999,"text":"Deaktivierung"},{"type":"paragraph","crDate":1684226592480,"chDate":1684226855261,"text":"Javascript kann vom Benutzer im Browser deaktiviert werden. Das ist erstmal kein Nachteil, kann aber dazu führen, dass Webseiten, die auf JS aufbauen, einfach nichtmehr funktionieren.\nNatürlich sollte eine Webseite, die (zumindest teilweise) auf Javascript basiert, immer einen <i>noscript</i>-Tag tragen.\nAnsonsten kann man da nicht viel machen. Während der Entwicklung muss überlegt werden, ob dieser geringe Prozentsatz an Benutzern ohne JS es rechtfertig, auf die vielen Vorteile zu verzichten."}]}