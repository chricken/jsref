{"content":[{"type":"paragraph","crDate":1686744845415,"chDate":1686747004157,"text":"Eine <i>Ternary</i> ist eine Alternative zu einer simplen <i>if-else-Anweisung</i>.\nEin Vorteil einer Ternary ist, dass keine eigenen Scopes gemanaget werden müssen, was sie etwas ressourcenschonender macht.\nAußerdem sind sie einfacher zu schreiben und übersichtlicher. In einem Ternary steuert eine logische Aussage die Rückgabe, welche aus zwei Alternativen gewählt wird.\nDie Ternary trägt ihren Namen, weil sie aus drei Teilen besteht:\n(logische Aussage) ? (return bei true) : (return bei false)"},{"type":"code","crDate":1686747496838,"chDate":1686747505919,"text":"const isPrime = number => {\n if (number <= 1) return false;\n for (let i = 2; i <= Math.sqrt(number); i++) {\n  if (!(number % i)) return false;\n }\n return true;\n};\n\nlet num = Math.floor(Math.random()*100);\n\nlet ausgabe = isPrime(num) ? `${num} ist eine Primzahl` : `${num} ist keine Primzahl`;\nconsole.log(ausgabe);"}]}