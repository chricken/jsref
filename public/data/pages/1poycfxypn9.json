{"content":[{"type":"paragraph","crDate":1709131857682,"chDate":1709132994378,"text":"Mit Filtern können in einem Canvas Effekte erzuelt werden.\nEs werden die folgenden Filter unterstützt. Dies sind die selben Filter mit derselben Syntax wie in CSS. \n<ul>\n<li><b>blur()</b>\nGaussche Unschärfe mit Angabe der Pixel.</li>\n<li><b>brightness()</b>\nLinearer Multiplikator. Angaben erfolgen in %. 0% macht das Bild schwarz, Werte über 100% machen das Ergebnis heller.</li>\n<li><b>contrast()</b>\nKontrast in %. 0% macht das Bild schwarz, 100% ändert nichts..</li>\n<li><b>drop-shadow()</b>\nSchatten mit der CSS-Syntax.</li>\n<li><b>grayscale()</b>\nUmwandeln der Zeichnung in Graustufen. Der Parameter bestimmt, wie sehr die Zeichnung ausgegraut werden soll.</li>\n<li><b>hue-rotate()</b>\nFarbverschiebung. Angabe der Werte in deg.</li>\n<li><b>invert()</b>\nInvertierung der Farbe mit Angabe in %.</li>\n<li><b>saturate()</b>\nSättigung</li>\n<li><b>sepia()</b>\nUmwandeln der Zeichnung in ein altes Foto mit Angabe in %</li>\n<li><b>none()</b>\nAlles zurück auf default.</li>\n</ul>"},{"type":"paragraph","crDate":1709133015897,"chDate":1709133052894,"text":"Die Angaben werden in Form eines String übergeben und manipulieren die Zeichnungen, die nach der Änderung ausgeführt werden."},{"type":"code","crDate":1709133057702,"chDate":1709133077277,"text":"for (let i = 0; i <= 10; i++) {\n ctx.filter = `blur(${i*2}px)`;\n ctx.fillStyle = `hsl(${~~(Math.random()*360)}, 100%, 50%)`\n ctx.fillRect(\n  (i * 30),\n  20,\n  20,\n  110\n );\n}"},{"type":"image","crDate":1709133182709,"chDate":1709133182709,"filename":"598710ff3cb06c6a0808aa300.png"}]}