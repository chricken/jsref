{"content":[{"type":"paragraph","crDate":1691418282185,"chDate":1691419428115,"text":"Um mit dem DOM zu interagieren, ist eine gute Praxis, zunächst die gewünschten <i>DOM</i>-Elemente herauszusuchen.\nDazu bietet JS verschiedene Möglichkeiten. Grundsätzlich sollte das DOM nur so selten wie möglich durchsucht werden, da dies ein ein relativ langwieriger Prozess ist. Daher ist es grundsätzlich eine gute Idee, die gefundenen Elemente in Variablen zu schreiben."},{"type":"subheader","crDate":1691418546914,"chDate":1691418588013,"text":"querySelector()"},{"type":"paragraph","crDate":1691418594302,"chDate":1691485849303,"text":"Diese Methode benutzt den <i>CSS-Selektor</i>, der als Parameter übergeben wird und liefert das <i>erste Element</i> aus dem DOM zurück, das dem Selektor entspricht. \nDiese Methode versteht buchstäblich jede CSS-Angabe und ist damit sehr viel flexibler als die alten Schreibweisen, die weiter unten behandelt werden.\nDie querySelector()-Methode kann neben dem <i>document</i>-Objekt auch auf jedes <i>beliebige DOM-Element</i> angewendet werden. Dann werden die Kinder des DOM-Elementes durchsucht."},{"type":"code","crDate":1691485432706,"chDate":1691486913952,"text":"const myElement = document.querySelector('h1');\nconsole.log(myElement);             // -> &lt;h1>\nconsole.log(myElement.innerText);   // -> Javascript\n\nconst yourElement = document.querySelector('section > ul li:nth-of-type(2)');\nconsole.log(yourElement.innerText); // -> Eingabefelder erstellen\n\nconst parentElement = document.querySelector('section:nth-of-type(2)');\nconst childElement = parentElement.querySelector('p:nth-of-type(2)');\nconsole.log(childElement);          // -> &lt;p>"},{"type":"subheader","crDate":1691487042898,"chDate":1691487055446,"text":"querySelectorAll()"},{"type":"paragraph","crDate":1691487065569,"chDate":1691488882259,"text":"Die <i>querySelectorAll()</i>-Methode funktioniert genauso wie die querySelector()-Methode, nur dass sie <i>alle</i> gefundenen DOM-Elemente zurückliefert. \nDie Rückgabe erfolgt in Form einer sog. Nodeliste. Es ist eine gute Praxis, die Rückgaben direkt in ein <i>Array</i> umzuwandeln, so können einfach alle Array-Methoden auf die DOM-Elemente angewendet werden."},{"type":"code","crDate":1691488786971,"chDate":1691488798482,"text":"const parent = document.querySelector('section:nth-of-type(3)');\n\nlet myElements = parent.querySelectorAll('li');\nmyElements = Array.from(myElements);\n\n// Neue Elemente mit dem Inhalt der Liste erzeugen\nmyElements = myElements.map(el => {\n let newEl = document.createElement('span')\n newEl.innerText = el.innerText;\n el.remove();\n return newEl;\n})\n\n// Neue Elemente einhängen\nmyElements.forEach(el => {\n parent.append(el);\n el.style.padding = '10px';\n});"},{"type":"subheader","crDate":1691489307272,"chDate":1691489318947,"text":"getElementById()"},{"type":"paragraph","crDate":1691489321068,"chDate":1691493382507,"text":"Die <i>getElementById()</i>-Methode gehört zu den alten Methoden, um Elemente aus dem DOM zu suchen. Die neueren Methoden (siehe oben) sind wesentlich flexibler und können die Suche deutlich vereinfachen. \nSie nimmt einen String an, der die zu suchende ID enthält. \nDie Methode liefert nur das Element mit genau dieser ID zurück.\nGegenüber der querySelector()-Methode wird diese Methode ein kleines bisschen schneller. Ob dieser mickrige Vorteil die mangelnde Flexibilität ausgleicht, muss jede*r selbst wissen.w"},{"type":"code","crDate":1691493118062,"chDate":1691493119662,"text":"const elFirst = document.getElementById('first');\nconsole.log(elFirst.innerText);  // -> Was ist JavaScript? ..."},{"type":"subheader","crDate":1691494960523,"chDate":1691497950875,"text":"getElementsBy...()"},{"type":"paragraph","crDate":1691494974584,"chDate":1691498817126,"text":"Zu den alten Selektionsmethoden gehören auch <i>getElementsByClassName()</i>, <i>getElementsByTagName()</i> und <i>getElementsByName</i>.\nIhre Bedeutung ist relativ selbsterklärend, sie verloren aber durch <i>querySelectorAll()</i> ihre Bedeutung, die sie sehr unflexibel sind."}]}