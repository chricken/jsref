{"content":[{"type":"paragraph","crDate":1754655096232,"chDate":1754656646564,"text":"Ein sehr mächtiges Werkzeug in der Bild bearbeitung ist die Maskierung.\nDas bedeutet, Zeichenoperationen gelten nur in einem bestimmten Bereich der Arbeitsfläche.\nIm Canvas wird dies mirhilfe der <i>clip()</i>-Methode erledigt.\nEin Pfad wird einfach als Maske deklariert, ähnlich wie beim Zeichnen auch.\nJede Zeichenoperation danach wird nur innerhalb des definierten Pfades sichtbar sein."},{"type":"code","crDate":1754656589208,"chDate":1754656604771,"text":"ctx.beginPath();\nctx.arc(\n canvas.width / 2,\n canvas.height / 2,\n canvas.width / 4,\n 0,\n 2 * Math.PI\n);\nctx.clip();\n\nctx.fillStyle = 'red';\nctx.fillRect(0, 0, canvas.width, canvas.height / 2);\n\nctx.fillStyle = 'yellow';\nctx.fillRect(0, canvas.height / 2, canvas.width, canvas.height / 2);\n"},{"type":"subheader","crDate":1754656788431,"chDate":1754656827650,"text":"evenodd"},{"type":"paragraph","crDate":1754656653416,"chDate":1754658960682,"text":"Der Parameter kann bestimmen, wie überlappende Elemente behandelt werden. \n<ul><li><b>nonzero: </b>Alle Bereiche innerhalb der Pfade werden als Maske verwendet.</li>\n<li><b>evenodd: </b>Bereiche mit einer geraden Zahl von Überlappungen werden als außerhalb der Maske betrachtet</li></ul>"},{"type":"code","crDate":1754658783469,"chDate":1754658870158,"text":"ctx.beginPath();\n\nctx.arc(\n canvas.width / 2, canvas.height / 2, canvas.width / 4,\n 0, 2 * Math.PI\n);\n\nctx.arc(\n canvas.width / 2, canvas.height / 2, canvas.width / 8,\n 0, 2 * Math.PI\n);\n\nctx.clip('evenodd');\n\nctx.fillStyle = 'red';\nctx.fillRect(0, 0, canvas.width, canvas.height / 2);\n\nctx.fillStyle = 'yellow';\nctx.fillRect(0, canvas.height / 2, canvas.width, canvas.height / 2);"},{"type":"subheader","crDate":1754658983371,"chDate":1754659003361,"text":"Komplexe Masken"},{"type":"paragraph","crDate":1754659008594,"chDate":1754659286623,"text":"Masken können auch verwendet werden, um andere Masken zu maskieren. Dadurch lässt sich eine komplexe Maske kombinieren.\nDazu werden die Pfade definiert und in Variablen gespeichert.\nDiese Variablen werden dann für das Clipping verwendet."},{"type":"code","crDate":1754659149936,"chDate":1754659730060,"text":"let circlePath = new Path2D();\ncirclePath.arc(\n c.width / 2, c.height / 2, c.height / 4,\n 0, 2 * Math.PI\n);\n\nlet squarePath = new Path2D();\nlet distance = 180;\nsquarePath.rect(\n distance, distance,\n c.width - (distance * 2), c.height - (distance * 2)\n);\n\nctx.clip(circlePath);\nctx.clip(squarePath);\n\nctx.fillStyle = 'red';\nctx.fillRect(\n 0, 0,\n c.width, c.height / 2\n);\n\nctx.fillStyle = 'yellow';\nctx.fillRect(\n 0, c.height / 2,\n c.width, c.height / 2\n);\n"}]}