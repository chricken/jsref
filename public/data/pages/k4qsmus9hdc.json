{"content":[{"type":"paragraph","crDate":1687869491300,"chDate":1687869847633,"text":"NodeJS alleine ist noch nicht sehr hilfreich, da alles, was Javascript eigentlich ausmacht (HTML-Interaktion, Kommunikation mit dem Benutzer, etc.) ohne Browser nicht zugänglich ist. Andererseits ist das, was man sich von NodeJS erhofft (Dateizugriff, Datenbank-Kommunikation, etc) in Javascript nicht integriert und damit auch in NodeJS nicht.\nDiese Funktionalitäten müssen in NodeJS erst integriert werden.\nDazu dienen Module. Diese können für eigenen Code verwendet weden und damit die Übersichtlichkeit und Wartbarkeit erhöhen. \nSie können aber auch neue Funktionalitäten zu NodeJS hinzufügen. "},{"type":"paragraph","crDate":1687869860304,"chDate":1687870441467,"text":"Grundsätzlich gibt es drei Möglichkeiten, NodeJS durch Module zu erweitern:\n<ul>\n<li>Standard-Module: Dies sind Module, die schon bei der Installation von NodeJS verfügbar sind.</li>\n<li>npmjs.org: Von der Plattform können Third-Party-Module installiert werden</li>\n<li>Eigene Module: Natürlich können auch eigene Module entwickelt und eingebunden werden</li>\n</ul>"},{"type":"subheader","crDate":1687870597226,"chDate":1687870601544,"text":"require()"},{"type":"paragraph","crDate":1687870457772,"chDate":1687872726915,"text":"Ein Modul wird üblicherweise als sog. CommonJS-Modul eingebunden. Die <i>require()</i>-Funktion liefert einen Wert zurück, der in einer Variablen/Konstanten gespeichert werden kann. Bei diesem Wert handelt es sich meist um Objekte, Funktionen oder Klassen."},{"type":"code","crDate":1687871080419,"chDate":1687871969554,"text":"const myModule = require('myModule');\n\nconsole.log(myModule);"},{"type":"subheader","crDate":1687873436285,"chDate":1687874769800,"text":"Lokale Module"},{"type":"paragraph","crDate":1687873446580,"chDate":1687874756379,"text":"Module können grundsätzlich in lokale und globale Module kategorisiert werden.\nLokale Module liegen im Ordner <i>node_modules</i> Dieser wiederum befindet sich entweder im Projekt-Ordner oder in dessen Eltern-Ordner oder in dessen Eltern-Ordner oder etc.\nDer genaue Pfad zu den lokalen Modulen kann mit dem folgenden Befehl ausgelesen werden.\nnpm root"},{"type":"subheader","crDate":1687874760465,"chDate":1687874765690,"text":"Globale Module"},{"type":"paragraph","crDate":1687874780472,"chDate":1687875354257,"text":"Ein globales Modul ist kein normales Modul sondern vielmehr ein zusätzliches Programm, das durch einen Terminal-Befehl aufgerufen werden kann.\nBeispielsweise gibt es Module wie\n<ul>\n<li>Processmanager (PM2)</li>\n<li>Automatischer Neustart (nodemon)</li>\n</ul>\nEin globales Modul wird mit der <i>-g</i> Option installiert.\nnpm install -g nodemon\nNun kann nodemon jederzeit im Terminal verwendet werden\nDer Speicherort der globalen Module lässt sich mit diesem Befehl auslesen:\nnpm root -g"},{"type":"subheader","crDate":1687872730097,"chDate":1687875380442,"text":"Default Module"},{"type":"paragraph","crDate":1687872758553,"chDate":1687875560348,"text":"Die Default Module sind im Installationsordner von Node gespeichert."}]}