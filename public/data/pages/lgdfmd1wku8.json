{"content":[{"type":"subheader","crDate":1685629682228,"chDate":1685629899753,"text":"value.substr()"},{"type":"paragraph","crDate":1685629690616,"chDate":1685713237500,"text":"Es gibt mehrere Methoden, um aus einem String einen Teil heraus zu kopieren.\nDie nicht-destruktive <i>substr()</i>-Methode bekommt als ersten Parameter den Start-Index übergeben.\nDieser kann positiv oder negativ sein. Ein negativer Wert wird von hinten gezählt.\nDer zweite Parameter definiert die Zahl an Zeichen, die von substr kopiert werden. Wird dieser Parameter weggelassen, werden vom Start-Index beginnend der Rest des String kopiert.\nDa die subStr()-Methode sich je nach Parameter unterschiedlich verhält, wird sie gelegentlich als veraltet bezeichnet."},{"type":"code","crDate":1685630283910,"chDate":1685630332927,"text":"let myString = 'Hello World';\n\nlet substr = myString.substr(3,5);\nconsole.log(substr);\n\nsubstr = myString.substr(6);\nconsole.log(substr);\n\nsubstr = myString.substr(-5);\nconsole.log(substr);"},{"type":"subheader","crDate":1685630458198,"chDate":1685630469329,"text":"value.substring()"},{"type":"paragraph","crDate":1685630516842,"chDate":1685713157506,"text":"Nicht-destruktive Methode, die einen Teil aus einem bestehenden String kopiert.\nIm Gegensatz zur jener wird der zweite Parameter als letzter Index verwendet. \nDabei ist zu beachten, dass der Index vor das Zeichen zeigt. D.h. das Zeichen am Index wird nicht mit kopiert.\nDer zweite Parameter definiert die Zahl an Zeichen, die von substr kopiert werden. Wird dieser Parameter weggelassen, werden vom Start-Index beginnend der Rest des String kopiert."},{"type":"code","crDate":1685630736417,"chDate":1685630830786,"text":"let myString = 'Hello World';\n\nlet substr = myString.substring(3,5);\nconsole.log(substr);  // -> lo\n\nsubstr = myString.substring(6);\nconsole.log(substr); // -> World"},{"type":"subheader","crDate":1685711326970,"chDate":1685711336521,"text":"value.includes()"},{"type":"paragraph","crDate":1685711339537,"chDate":1685713034243,"text":"Nicht-destruktive Methode die prüft, ob in einem String ein definierter Teilstring vorkommt.\nDer Rückgabewert ist ein Boolean."},{"type":"code","crDate":1685711452441,"chDate":1685711737427,"text":"let myString = 'Merkur und Venus und Erde';\nlet searchThis = 'und';\n\nconsole.log(myString.includes(searchThis));  // -> true\n"},{"type":"subheader","crDate":1685712296954,"chDate":1685712389043,"text":"value.toLowerCase(), value.toUpperCase()"},{"type":"paragraph","crDate":1685711784216,"chDate":1685712537496,"text":"Nicht-destruktive Methode, welche Strings in Klein- bzw Großschreibung umwandelt.\nDiese kann z.B. verwendet werden, um bei der Suche nach einem Teilstring Groß-/Kleinschreibung ignorieren zu können."},{"type":"code","crDate":1685712562966,"chDate":1685712831615,"text":"let normal = 'Hallo Welt! 123';\nlet allesKlein = normal.toLowerCase();\nlet allesGross = normal.toUpperCase();\n\nconsole.log(allesKlein);  // -> hallo welt! 123\nconsole.log(allesGross);  // -> HALLO WELT! 123\n\nlet myString = 'Merkur und Venus und Erde';\nlet searchThis = 'Und';\n\nconsole.log(myString.includes(searchThis));  // -> true\n"},{"type":"subheader","crDate":1685712962657,"chDate":1685712970559,"text":"value.split()"},{"type":"paragraph","crDate":1685712974390,"chDate":1685714046289,"text":"Die nicht-destruktive <i>split()</i>-Methode erzeugt ein neues Array auf Basis eines Strings. \nDer Parameter wird als Trennstring genommen. D.h., das Array wird mit den Teilstrings gefüllt, die zwischen dem Trennstring liegen."},{"type":"code","crDate":1685713582275,"chDate":1685713931343,"text":"let myString = 'Merkur, Venus, Erde, Mars, Jupiter, Saturn, Uranus, Neptun';\nlet myArray = myString.split(', ');\nconsole.log(myArray);  // -> Array [Merkur,Venus,Erde,Mars,Jupiter,Saturn,Uranus,Neptun]\nconsole.log(Array.isArray(myArray));  // -> true"}]}