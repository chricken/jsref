{"content":[{"type":"paragraph","crDate":1696484456952,"chDate":1696488893229,"text":"Manchmal soll ein bestimmter Effekt erzielt werden, der mit dem reinen Zeichnen geometrischer Figuren oder dem Setzen von Sprites so nicht erreicht werden kann. Z.B. soll das zu zeichnende Elemente ein wenig gedreht werden. In dem Fall kann das Canvas anhand einer Transformationsmatrix verzerrt werden."},{"type":"subheader","crDate":1696487400854,"chDate":1696487407208,"text":"Transformationsmethoden"},{"type":"paragraph","crDate":1696487416179,"chDate":1696491436438,"text":"Der einfachste Weg, die Matrix zu transformieren ist die Verwendung der folgenden Methoden. Ohne Transformation sollen die Beispiele so aussehen:"},{"type":"code","crDate":1696489114211,"chDate":1696489941280,"text":"const c = document.querySelector('#myCanvas');\nconst ctx = c.getContext('2d');\n\nlet size = 10;\nlet padding = 5;\nfor (let y = padding; y < c.height; y += size + padding) {\n for (let x = padding; x < c.width; x += size + padding) {\n  ctx.fillRect(x, y, size, size);\n }\n}"},{"type":"image","crDate":1696489558484,"chDate":1696489558484,"filename":"99640a5d3547b6f9845e3a302.png"},{"type":"subheader","crDate":1696490306567,"chDate":1696490310470,"text":"Verschieben"},{"type":"paragraph","crDate":1696489566443,"chDate":1696490346580,"text":"Die <i>translate()</i>-Methode berschiebt die Koordinaten des Canvas um die angegebenen Pixel.\nDie folgenden Zeichnungen orientieren sich an den verschobenen Koordinaten und sind damit sind ebenso verschoben."},{"type":"code","crDate":1696489818242,"chDate":1696489953272,"text":"const c = document.querySelector('#myCanvas');\nconst ctx = c.getContext('2d');\n\nctx.translate(50, 50);\n\nlet size = 10;\nlet padding = 5;\nfor (let y = padding; y < c.height; y += size + padding) {\n for (let x = padding; x < c.width; x += size + padding) {\n  ctx.fillRect(x, y, size, size);\n }\n}\n"},{"type":"image","crDate":1696489882865,"chDate":1696489882865,"filename":"99640a5d3547b6f9845e3a303.png"},{"type":"paragraph","crDate":1696490167812,"chDate":1696490191679,"text":"Für spezielle Effekte kann die Transformation wiederholt aufgerufen werden."},{"type":"code","crDate":1696490194798,"chDate":1696490217115,"text":"const c = document.querySelector('#myCanvas');\nconst ctx = c.getContext('2d');\n\nlet size = 10;\nlet padding = 5;\nfor (let y = padding; y < c.height; y += size + padding) {\n for (let x = padding; x < c.width; x += size + padding) {\n  ctx.translate(1, 1);\n  ctx.fillRect(x, y, size, size);\n }\n}"},{"type":"image","crDate":1696490228260,"chDate":1696490228260,"filename":"99640a5d3547b6f9845e3a304.png"},{"type":"subheader","crDate":1696491401921,"chDate":1696491412176,"text":"Skalieren"},{"type":"paragraph","crDate":1696491414887,"chDate":1696491910941,"text":"Die <i>scale()</i>-Methode streckt das Koordinatenkreuz des Canvas um den gegebenen Wert.\nDie folgenden Zeichnungen orientieren sich an den gestreckten Koordinaten und sind damit sind ebenso verzerrt."},{"type":"code","crDate":1696491850681,"chDate":1696491866943,"text":"const c = document.querySelector('#myCanvas');\nconst ctx = c.getContext('2d');\n\nctx.scale(.3,2);\n            \nlet size = 10;\nlet padding = 5;\nfor (let y = padding; y < c.height; y += size + padding) {\n for (let x = padding; x < c.width; x += size + padding) {\n  ctx.fillRect(x, y, size, size);\n }\n}"},{"type":"image","crDate":1696491881445,"chDate":1696491881445,"filename":"99640a5d3547b6f9845e3a309.png"},{"type":"subheader","crDate":1696490365067,"chDate":1696490368290,"text":"Drehen"},{"type":"paragraph","crDate":1696490371458,"chDate":1696490688835,"text":"Das Koordinatenkreuz des Canvas wird mit der <i>rotate()</i>-Methode um den gegebenen Winkel gedreht.\nDer Winkel muss in Bogenmaß angegeben sein.\nDie folgenden Zeichnungen orientieren sich an dem Koordinatenkreuz und sind damit sind ebenso gedreht."},{"type":"code","crDate":1696490736896,"chDate":1696490755727,"text":"const c = document.querySelector('#myCanvas');\nconst ctx = c.getContext('2d');\n\nctx.rotate(.03 * Math.PI);\n\nlet size = 10;\nlet padding = 5;\nfor (let y = padding; y < c.height; y += size + padding) {\n for (let x = padding; x < c.width; x += size + padding) {\n  ctx.fillRect(x, y, size, size);\n }\n}"},{"type":"image","crDate":1696490790036,"chDate":1696490790036,"filename":"99640a5d3547b6f9845e3a305.png"},{"type":"paragraph","crDate":1696490906130,"chDate":1696490926409,"text":"Für spezielle Effekte kann die rotate()-Methode mehrfach aufgerufen werden."},{"type":"code","crDate":1696490947809,"chDate":1696490977006,"text":"const c = document.querySelector('#myCanvas');\nconst ctx = c.getContext('2d');\n            \nlet size = 10;\nlet padding = 5;\nfor (let y = padding; y < c.height; y += size + padding) {\n for (let x = padding; x < c.width; x += size + padding) {\n  ctx.rotate(.002 * Math.PI);\n  ctx.fillRect(x, y, size, size);\n }\n}"},{"type":"image","crDate":1696491000959,"chDate":1696491000959,"filename":"99640a5d3547b6f9845e3a307.png"},{"type":"subheader","crDate":1696505336589,"chDate":1696505343223,"text":"Alles gleichzeitig"},{"type":"paragraph","crDate":1696491176289,"chDate":1696491714913,"text":"Um gleichzeitig zu verschieben, zu drehen und zu skalieren, sollte zuletzt gedreht werden. Ansonsten werden die Ergebnisse schwer vorhersagbar."},{"type":"code","crDate":1696491291016,"chDate":1696505053675,"text":"const c = document.querySelector('#myCanvas');\nconst ctx = c.getContext('2d');\n\nctx.translate(150,20);\nctx.scale(.2, .2);\nctx.rotate(.25 * Math.PI);\n            \nlet size = 10;\nlet padding = 5;\nfor (let y = padding; y < c.height; y += size + padding) {\n for (let x = padding; x < c.width; x += size + padding) {\n  ctx.fillRect(x, y, size, size);\n }\n}"},{"type":"image","crDate":1696491322119,"chDate":1696491322119,"filename":"99640a5d3547b6f9845e3a30a.png"},{"type":"subheader","crDate":1696485264983,"chDate":1696491395265,"text":"Reset Matrix"},{"type":"paragraph","crDate":1696485275742,"chDate":1696505589390,"text":"Mit der <i>setTransform()</i>-Methode kann die gewünschte Transformation direkt definiert werden.\nDie setTransform()-Methode ist allerdings etwas schwer zu handhaben, weswegen sie bevorzugt nur zum Zurücksetzen der Matrix verwendet wird.\nZum Reset werden der setTransform()-Methode die Standardwerte übergeben."},{"type":"code","crDate":1696505528963,"chDate":1696505626795,"text":"const c = document.querySelector('#myCanvas');\nconst ctx = c.getContext('2d');\n\nctx.translate(150, 20);\nctx.scale(.2, .2);\nctx.rotate(.25 * Math.PI);\n\nlet size = 10;\nlet padding = 5;\nfor (let y = padding; y < c.height; y += size + padding) {\n for (let x = padding; x < c.width; x += size + padding) {\n  ctx.fillRect(x, y, size, size);\n }\n}\n\nctx.setTransform(1, 0, 0, 1, 0, 0);\n            \nctx.strokeStyle = '#f00';\nfor (let y = padding; y < c.height; y += size + padding) {\n for (let x = padding; x < c.width; x += size + padding) {\n  ctx.strokeRect(x, y, size, size);\n }\n}"},{"type":"image","crDate":1696505640764,"chDate":1696505640764,"filename":"99640a5d3547b6f9845e3a30b.png"}]}