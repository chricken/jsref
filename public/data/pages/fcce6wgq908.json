{"content":[{"type":"paragraph","crDate":1698068236881,"chDate":1698068562558,"text":"Git ist ein weit verbreitetes Open-Source-Tool zur <i>Versionskontrolle</i> von Software. Es wurde 2005 von Linus Torvalds, dem Entwickler des Linux-Betriebssystems, entwickelt und wird von einer großen Anzahl von Softwareprojekten, sowohl kommerziellen als auch Open-Source-Projekten, verwendet.\nGit ermöglicht es Entwicklern, Änderungen an ihrem Code zu verfolgen, verschiedene Versionen zu verwalten und effektiv zusammenzuarbeiten. Es verwendet ein verteiltes Versionskontrollsystem, bei dem jeder Entwickler eine vollständige Kopie des Repositorys besitzt. Dadurch können Entwickler unabhängig voneinander an ihren eigenen Kopien arbeiten und Änderungen später zusammenführen.\nEinige der Vorteile von Git sind:\n<ul>\n<li><b>Schnelle Entwicklung:</b>\nEntwickler können gleichzeitig an verschiedenen Versionen des Codes arbeiten und Änderungen schnell zusammenführen.</li>\n<li><b>Offline-Arbeit:</b>\nDa jeder Entwickler eine lokale Kopie des Repositorys hat, können Änderungen auch offline durchgeführt werden.</li>\n<li><b>Versionskontrolle:</b>\nGit speichert alle Änderungen an Dateien und ermöglicht es Entwicklern, zu früheren Versionen zurückzukehren und den Verlauf des Codes nachzuvollziehen.</li>\n<li><b>Zusammenarbeit:</b></li>\nGit erleichtert die Zusammenarbeit in Teams, da Entwickler ihre Änderungen problemlos teilen und zusammenführen können </li>\n</ul>\nGit bietet verschiedene Befehle und Funktionen, um mit dem Versionskontrollsystem zu interagieren. Es gibt auch verschiedene Benutzeroberflächen und Tools, wie Git Bash, Git GUI und Git CMD, die die Verwendung von Git erleichtern."},{"type":"links","crDate":1698068747089,"chDate":1698068747089,"links":[{"title":"Download Git","url":"https://git-scm.com/"}]},{"type":"subheader","crDate":1698070406523,"chDate":1698070447073,"text":"Disclaimer"},{"type":"paragraph","crDate":1698070056740,"chDate":1698070518458,"text":"Grundsätzlich muss zunächst gesagt werden, dass das Thema Git hier nur gestriffen wird. Hier wird beabsichtigt, ein eigenes Projekt auf Github hosten und anderen zur Verfügung stellen zu können. Das Ziel ist, in einer Bewerbung den absolut notwendigen Link zu Github/Gitlab angeben zu können.\nThemen wie Branching oder Merging und andere fortgeschrittene Techniken werden hier nicht behandelt."},{"type":"subheader","crDate":1698070617443,"chDate":1698070622011,"text":"Einstellungen"},{"type":"paragraph","crDate":1698070624771,"chDate":1698070854195,"text":"Vor der wirklichen Verwendung von Git muss zumindest ein Name und eine E-Mail-Adresse hinterlegt werden. Diese dienen dazu, in den Versionen hinterlegt zu werden. Die Daten sind keine Logins sondern werden lediglich beim Anlegen eines Commits verwendet."},{"type":"terminal","crDate":1698070926493,"chDate":1698071170715,"text":"// Username ändern\ngit config user.name \"Ihr neuer Name\"\n\n// Username ausgeben\ngit config user.name\n\n// E-Mail ändern\ngit config user.email \"post@tld.de\"\n\n// E-Mail ausgeben\ngit config user.email"},{"type":"links","crDate":1698070890919,"chDate":1698070890919,"links":[{"title":"Config","url":"https://git-scm.com/docs/git-config"}]},{"type":"subheader","crDate":1698070477470,"chDate":1698070483149,"text":"Initialisierung"},{"type":"paragraph","crDate":1698068668319,"chDate":1698071489188,"text":"In einem Projekt muss zunächst Git initialisiert werden. Dadurch wird ein neues Git-Repository in einem Verzeichnis erstellt. \nDie Initialisierung eines Git-Repositorys erstellt ein verstecktes Verzeichnis namens <i>.git</i>, das alle erforderlichen Metadaten und Konfigurationsdateien enthält, um die Versionskontrolle mit Git zu ermöglichen.\nDieses Verzeichnis enthält Informationen über den Verlauf der Commits, die Referenzen auf Branches und Tags, Konfigurationsdateien und andere Metadaten, die für die Verwaltung des Repositorys erforderlich sind."},{"type":"terminal","crDate":1698071539145,"chDate":1698071543113,"text":"git init"},{"type":"links","crDate":1698071515483,"chDate":1698071515483,"links":[{"title":"Init","url":"https://git-scm.com/docs/git-init"}]},{"type":"subheader","crDate":1698071566712,"chDate":1698071572406,"text":"Staging Area"},{"type":"paragraph","crDate":1698071577262,"chDate":1698074159070,"text":"Die Staging-Area in Git ist ein Zwischenspeicherbereich, in dem Änderungen an Dateien vorgemerkt werden, bevor sie in einem Commit festgehalten werden. Um die aktuellen Änderungen dort aufzunehmen dient der add-Befehl.\nDer add-Befehlt bekommt den Pfad zu den Dateien, die gespeichert werden sollen. In den meisten Fällen ist die ein <i>.</i> (punkt). Das bedeutet, das aktuelle Verzeichnis wird gespeichert."},{"type":"terminal","crDate":1698074162222,"chDate":1698074171126,"text":"git add ."},{"type":"paragraph","crDate":1698074181261,"chDate":1698074204907,"text":"Falls hier ein Fehler unterlaufen ist, kann die Staging Area wieder zurückgesetzt werden."},{"type":"terminal","crDate":1698074208051,"chDate":1698074212346,"text":"git reset"}]}