{"content":[{"type":"paragraph","crDate":1753961594526,"chDate":1753961701356,"text":"Paginierung bedeutet, dass große Datenmengen in einer Datenbank nicht alle auf einmal angezeigt werden, sondern in kleinere „Seiten“ aufgeteilt werden.\nSo sieht der Nutzer zum Beispiel immer nur 10 oder 20 Einträge auf einmal und kann dann zur nächsten Seite blättern.\nDadurch bleibt die Darstellung übersichtlich und die Ladezeiten verbessern sich. Außerdem werden weniger Daten übertragen."},{"type":"paragraph","crDate":1753961723966,"chDate":1753962791602,"text":"Der Kern der Paginierung sind zwei Einstellungen der <i>db.list()</i>-Methode.\n<ul><li><b>limit:</b>Sagt aus, wie viele Datensätze auf einmal geladen werden sollen.</li>\n<li><b>skip:</b>Sagt aus, wie viele Datensätze übersprungen werden sollen.</li></ul>"},{"type":"paragraph","crDate":1753962259898,"chDate":1753962763988,"text":"Um beispielsweise die dritte Seite an Datensätzen anzuzeigen, wenn jede Seite 10 Datensätze zeigt, würde dies bedeuten:\n<i>limit</i> auf 10, weil 10 Datensätze je Seite\n<i>skip</i> auf 2 * 10 = 20, weil die ersten zwei Seiten übersprungen werden."},{"type":"code","crDate":1753962392799,"chDate":1753962745041,"text":"const page = 3; // aktuelle Seite\nconst pageSize = 10; // Einträge pro Seite\n\ndb.list({\n  include_docs: true,\n  skip: (page - 1) * pageSize,\n  limit: pageSize\n}).then(\n  res => res.rows.map(row => row.doc),\n).then(\n  console.log  \n).catch(\n  console.warn  \n)"}]}