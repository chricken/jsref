{"content":[{"type":"paragraph","crDate":1722952839563,"chDate":1753788517081,"text":"Der Context erlaubt es, an übergeordneter Stelle Daten abzulegen und von Kind-Komponenten aus darauf lesend und schreibend zuzugreifen. Dadurch können Informationen ohne viel Aufwand bei der Parameterübergabe in der ganzen App verwendet werden.\nKern des Contexts ist die <i>createContext()</i>-Methode. Diese legt den Context an und stellt alle Methoden bereit, um mit dem Context arbeiten zu können.\nEs ist ein guter Weg, den Context in einer eigenen Datei anzulegen, um ihn importieren zu können, falls gewünscht."},{"type":"code","crDate":1723035098596,"chDate":1723036725422,"text":"// MyContext.js\nimport { createContext } from 'react';\n\n// Definiere den Context\nconst MyContext = createContext();\n\nexport default MyContext;\n"},{"type":"paragraph","crDate":1723035121562,"chDate":1723035877395,"text":"MyContext ist ein Objekt, das ein Attribut namens <i>Provider</i> enthält. Dieser ist eine Komponente. \nDiese Provider-Komponente wird verwendet, um die Daten für eine andere Komponente zur Verfügung zu stellen.\nAn den Provider wird als <i>value</i>-Attribut die gewünschten Daten übergeben. Diese stehen dann in der/den aufgerufenen Komponente(n) zur Verfügung."},{"type":"code","crDate":1723035771795,"chDate":1723036722601,"text":"// App.js\nimport MyContext from './MyContext.js';\nimport ShowData from './ShowData.js';\n\nconst App = () => {\n // Definiere den Wert des Contexts\n const contextValue = {\n  marke: 'Hyundai',\n  modell: 'i20',\n  leistungKW: 62,\n  farbe: 'braun',\n };\n\n return (\n  &lt;>\n   {/* Stelle den Context-Wert bereit */}\n   &lt;MyContext.Provider value={contextValue}>\n    &lt;ShowData />\n   &lt;/MyContext.Provider>\n  &lt;/>\n );\n};\n\nexport default App;\n"},{"type":"paragraph","crDate":1723035894402,"chDate":1723036204625,"text":"In der aufgerufenen Komponente kann dann der Context importiert werden. \nDie <i>useContext()</i>-Funktion kann schließlich auf die zuvor abgelegten Daten zurückgreifen."},{"type":"code","crDate":1723035891799,"chDate":1723036720048,"text":"import { useContext } from 'react';\nimport MyContext from './MyContext.js';\n\nconst MyComp = () => {\n // Verwende den Context-Hook, um den Wert des Contexts abzurufen\n const contextValue = useContext(MyContext);\n\n return (\n  &lt;>\n   &lt;div>\n    &lt;p> Marke: {contextValue.marke} &lt;/p>\n    &lt;p> Modell: {contextValue.modell} &lt;/p>\n    &lt;p> Leistung: {contextValue.leistungKW} KW&lt;/p>\n    &lt;p> Farbe: {contextValue.farbe} &lt;/p>\n   &lt;/div>\n  &lt;/>\n );\n};\n\nexport default MyComp;\n"}]}