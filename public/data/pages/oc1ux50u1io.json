{"content":[{"type":"paragraph","crDate":1692366100934,"chDate":1692366507466,"text":"Javascript wandelt Werte automatisch in den Datentyp um, der für eine Operation benötigt wird. Das funktioniert üblicherweise ganz gut, manchmal allerdings ist es notwendig, einen Wert zwangsweise in einem bestimmten Datentypen umzuwandeln.\nEin gutes Beispiel sind Eingabefelder. Diese geben ihren Value immer als String zurück. Wenn diese Eingaben addiert werden soll, dann würden die Strings einfach konkatiniert. Um sie mathematisch zu addieren, müssen sie in Number konvertiert werden.\nDiese Umwandlung wird Typecasting genannt."},{"type":"subheader","crDate":1692366459972,"chDate":1692366514393,"text":"Number()"},{"type":"paragraph","crDate":1692366471404,"chDate":1692367317956,"text":"Die Number()-Funktion nimmt den Wert und gibt seine Entsprechung als Datentyp <i>number</i> zurück.\nAls Alternative kann vor den Wert auch ein <i>+</i>-Zeichen gesetzt werden. Dieses wird als Vorzeichen interpretiert und erzwingt die Typumwandlung. Dies funktioniert auch für negative Zahlen."},{"type":"code","crDate":1692366616929,"chDate":1692366783412,"text":"let value = '123';\n\nvalue = Number(value);\n\nconsole.log(value);         // -> 123\nconsole.log(typeof value);  // -> number"},{"type":"code","crDate":1692367102661,"chDate":1692367126149,"text":"let value = '123';\n\nvalue = +value;\n\nconsole.log(value);         // -> 123\nconsole.log(typeof value);  // -> number"},{"type":"subheader","crDate":1692367235980,"chDate":1692367245764,"text":"String"},{"type":"paragraph","crDate":1692367270307,"chDate":1692367351228,"text":"Die String()-Funktion nimmt den Wert und gibt seine Entsprechung als Datentyp <i>string</i> zurück.\nAls Alternative kann der Wett auch an einen leeren String konkatiniert werden. "},{"type":"code","crDate":1692367396361,"chDate":1692367402769,"text":"let value = 123;\n\nvalue = String(value);\n\nconsole.log(value);         // -> \"123\"\nconsole.log(typeof value);  // -> string"},{"type":"code","crDate":1692367430407,"chDate":1692367435390,"text":"let value = 123;\n\nvalue = '' + value;\n\nconsole.log(value);         // -> \"123\"\nconsole.log(typeof value);  // -> string"},{"type":"subheader","crDate":1692367451164,"chDate":1692367456018,"text":"Boolean"},{"type":"paragraph","crDate":1692367460325,"chDate":1692367661382,"text":"Die Boolean()-Funktion nimmt den Wert und gibt seine Entsprechung als Datentyp <i>boolean</i> zurück.\nAls Alternative kann vor den Wert auch <i>!!</i> gesetzt werden. Ein ! dient zu einer logischen Umkehr. Dazu muss der Wert automatisch zu boolean gewandelt werden. Dann muss das zweite ! den boolschen Wert wieder richtig drehen."},{"type":"code","crDate":1692367404473,"chDate":1692367537274,"text":"let value = 123;\n\nvalue = Boolean( value);\n\nconsole.log(value);         // -> true\nconsole.log(typeof value);  // -> boolean"},{"type":"code","crDate":1692367691581,"chDate":1692367698659,"text":"let value = 123;\n\nvalue = !!value;\n\nconsole.log(value);         // -> true\nconsole.log(typeof value);  // -> boolean"}]}