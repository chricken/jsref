{"content":[{"type":"paragraph","crDate":1692268226099,"chDate":1692269070055,"text":"Felder vereinfachen das Anlegen von Objekt-Attributen, falls keine besonderen Anforderungen daran gestellt werden.\nSie werden im Objekt als normale Attribute angelegt, können aber nicht direkt mit Parametern gefüllt werden."},{"type":"code","crDate":1692271328309,"chDate":1692276992137,"text":"class Auto {\n keyNo = (Math.random() * 1e17).toString(36);\n\n constructor(marke, modell, leistungKW) {\n  Object.assign(this, { marke, modell, leistungKW })\n }\n}\n\nconst meinAuto = new Auto('Mercedes', 'C210', 130);\nconsole.log(meinAuto);  // -> keyNo: \"57jbkhibmxs\"\n                        // -> leistungKW: 130\n                        // -> marke: \"Mercedes\"\n                        // -> modell: \"C210\""},{"type":"subheader","crDate":1692278138166,"chDate":1692278248565,"text":"Private Felder"},{"type":"paragraph","crDate":1692278294990,"chDate":1692279014622,"text":"Private Felder können weder direkt gelesen noch direkt beschrieben werden.\nEin privates Feld wird wie jedes andere Feld angelegt, aber muss mit einem Hashtag \"#\" beginnen."},{"type":"code","crDate":1692278965842,"chDate":1692278978513,"text":"class Auto {\n #keyNo = (Math.random() * 1e17).toString(36);\n\n constructor(marke, modell, leistungKW) {\n  Object.assign(this, { marke, modell, leistungKW })\n }\n}\n\nconst meinAuto = new Auto('Mercedes', 'C210', 130);\nconsole.log(meinAuto['#keyNo']);  // -> undefined"},{"type":"paragraph","crDate":1692278998792,"chDate":1692279006083,"text":"Sie erlauben es, Daten in Objekten abzulegen und den Zugriff darauf steuerbar zu machen. \"Steuerbar\" bedeutet, dass zum Lesen ein Getter angelegt werden kann und zum Schreiben kann ein Setter angelegt werden. Hier können noch Sicherheitsfeatures eingebaut werden und/oder die Daten werden vor dem Speichern noch aufbereitet."},{"type":"code","crDate":1692279471742,"chDate":1692279552677,"text":"class Auto {\n #keyNo = {\n  id: 0,\n  timestamp: Date.now(),\n  hash: (Math.random()*1e17).toString(36)\n };\n            \n constructor(marke, modell, leistungKW) {\n  Object.assign(this, { marke, modell, leistungKW })\n }\n\n get keyNo(){\n  return this.#keyNo\n }\n            \n set keyNo(newID){\n  this.#keyNo = {\n   id: newID,\n   timestamp: Date.now(),\n   hash: (Math.random()*1e17).toString(36)\n  }\n }\n}\n\nconst meinAuto = new Auto('Mercedes', 'C210', 130);\nconsole.log(meinAuto.keyNo);  // -> hash: \"9s2vlpmmpu8\"\n                              // -> id: 0​\n                              // -> timestamp: 1692279356540\n        \nmeinAuto.keyNo = 123;\n        \nconsole.log(meinAuto.keyNo);  // -> hash: \"hoqa4bdc5yw\"\n                              // -> id: 123\n                              // -> timestamp: 1692279356542"}]}