{"content":[{"type":"paragraph","crDate":1693995374440,"chDate":1705325483723,"text":"Zur Eingabe von Text kann ein einfaches <i>input</i>-Textfeld benutzt werden. \nÜber das <i>type</i>-Attribut kann gesteuert werden, welche Art von Eingaben in diesem Element erwartet werden. \nNur wenige der Elemente werden automatisch auf gültige Eingaben verifiziert. In den meisten Fällen dient der Type dazu, dass der Browser eine entsprechende Eingabehilfe anbietet oder dass die Elemente auf Basis ihrer Typen selektiert werden können.\nDie wichtigsten Typen sind:\n<b>text</b>\nAls Inhalt des Eingabefeldes wird ein beliebiger String erwartet.\n<b>number</b>\nAls Inhalt des Eingabefeldes wird eine Zahl erwartet. Auch wenn als Inhalt eine Zahl erwartet wird, ist der Rückgabewert des Eingabefeldes dennoch vom Datentyp <i>string</i>\n<b>tel</b>\nErwartet eine Telefonnummer. \n<b>url</b>\nErwartet eine URL wie http://www.google.com\n<b>email</b>\nErwartet eine E-Mail-Adresse mit @, domain und handle\n<b>password</b>\nErwartet eine Texteingabe. Die Eingabe wird aber in nicht lesbarer Form dargestellt.\n<b>hidden</b>\nKann einen beliebigen Value erhalten, wird aber in der Webseite nicht dargestellt. Dies wird gern verwendet, um zusätzliche Daten abzulegen, die mit dem Formular übertragen werden.\n<b>button</b>\nDiese Elemente verhalten sich und sehen aus wie &lt;button type=\"button\">-Elemente.\n<b>submit</b>\nDiese Elemente verhalten sich und sehen aus wie &lt;button type=\"submit\">-Elemente.\n<b>checkbox</b>\nErzeugt eine Box mit einem Haken, ein- und ausgeschaltet werden kann.\n<b>radio</b>\nErzeugt ein Feld, das ein- und ausgeschaltet werden kann.\n<b>color</b>\nErzeugt eine Farbauswahl über einen Farbwähler, der abhängig vom Browser unterschiedlich aussehen kann.\n<b>date</b>\nEingabe eines Datums. Die Auswahlfenster kann abhängig vom Browser unterschiedlich aussehen kann.\n<b>time</b>\nEingabe eines Uhrzeit. Die Eingabe kann abhängig vom Browser unterschiedlich aussehen kann.\n<b>file</b>\nAuswahl einer oder mehrer Dateien. \n<b>image</b>\nEin Bild als Ersatz für den <i>submit</i>-Button. Kann das <i>scr</i>-Attribut annehmen.\n<b>range</b>\nAuswahl eines Wertes mit einem Schieberegler."},{"type":"subheader","crDate":1694008798227,"chDate":1694008804289,"text":"Inhalt"},{"type":"paragraph","crDate":1694008817788,"chDate":1705325772101,"text":"Jedes input-Element enthält einen value-Attribut. Dieses enthält den Wert aus der Eingabe.\nDieser Value ist immer eine String. Daher muss die Rückgabe der Felder häufig zunächst geparst werden. "},{"type":"code","crDate":1694008891188,"chDate":1694009071439,"text":"const elIinput = document.querySelector('input');\nelIinput.addEventListener('input', () => {\n console.log(elIinput.value);  // -> Eingabe\n})"},{"type":"subheader","crDate":1693998712068,"chDate":1694001160868,"text":"Validierung (Prüfung auf Gültigkeit)"},{"type":"paragraph","crDate":1693998721754,"chDate":1694001170828,"text":"Bis auf wenige Types wird keines der Eingabeelemente automatisch validiert. Und auch für jene ist die eingebaute Verifikation nur sehr einfach.\nEs bietet sich also grundsätzlich an, eine Verifizierung selbst vorzunehmen. Der erste Schritt zur Verfizierung ist das Abschalten der automatischen Validierung."},{"type":"code","crDate":1694001059499,"chDate":1694001225775,"text":"&lt;form action=\"/submit_form\" novalidate>\n E-Mail:\n &lt;input type=\"email\" required>\n &lt;input type=\"submit\">\n&lt;/form>"}]}