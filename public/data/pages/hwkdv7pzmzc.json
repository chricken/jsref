{"content":[{"type":"paragraph","crDate":1685104070628,"chDate":1685107505642,"text":"In Javascript gibt es viele Operatoren, die in einer Zeile zusammenkommen können. \nDiese in der richtigen Reihenfolge auszuführen entscheidet über die Richtigkeit der Ergebnisse.\nDaher ist in JS (und allen anderen Programmiersprachen) eindeutig geragelt, welche Operatoren in welcher Reihenfolge interpretiert / ausgeführt werden.\nDie Liste unten zeigt alle Operatoren in der Hierarchie. Je weiter oben ein Operator steht, desto eher wird er ausgeführt."},{"type":"paragraph","crDate":1685107496891,"chDate":1685107565926,"text":"Beispiel: Eine Operation 2 + 3 * 4.\nDa der Multiplikationsoperator weiter oben steht, wird er zuerst ausgeführt. Erst dann wird der Plus-Operator ausgeführt."},{"type":"paragraph","crDate":1685104779739,"chDate":1685106622996,"text":"<table><tr><td>\n<b>Beschreibung</b>\n</td><td> \t\t\t\n<b>Beispiel(e)</b>\n</td></tr><tr><td>\nGruppierungen (Klammern)\n</td><td> \t\t\t\n1 * ( 2 + 3 )\n</td></tr> <tr><td>\nZugriff auf Eigenschaften und Attribute\n</td><td> \t\t\t\nObjekt.attribut\narray[0]\nnew Klasse(…) <em>mit Attributen</em>\nfunktion()\n</td></tr><tr><td>\nAufruf eines Konstruktors\n</td><td> \t\t\t\nnew Klasse <em>ohne Attribute</em>\n</td></tr> <tr><td>\nInkrement/Dekrement nach Variablenname\n</td><td>\na++\na--\n</td></tr><tr><td>\nNot\nVorzeichenbestimmung\nInkrement/Dekrement vor Variablenname\ntypeof\nawait\n</td><td>\n!true\n+a\n-a\n++a\n--a\ntypeof a\na = await\nmeineFunktion();\n</td></tr><tr><td>\nPotenzierung\n</td><td>\na**b\n</td></tr><tr><td> \nMultiplikation\nDivision\nModulo\n</td><td> \na*b\na/b\na%b\n</td></tr><tr><td>\nAddition, Subtraktion\n</td><td>\na+b\na-b\n</td></tr><tr><td>\nGrößer/kleiner-Vergleich\n</td><td>\na&lt;b\na&lt;=b\na&gt;b\na&gt;=b\n</td></tr><tr><td>\nGleichheitsvergleich\n</td><td>\na==b\na===b\na!=b\na!==b\n</td></tr><tr><td>\nLogisches UND\n</td><td>\na&amp;&amp;b\n</td></tr><tr><td>\nLogisches ODER\n</td><td>\na||b\n</td></tr><tr><td>\nTernärer Operator\n</td><td>\na ? b : c\n</td></tr><tr><td>\nWertzuweisung\n</td><td>\n=\n+=\n-=\n*=\n/=\n%=\n</td></tr><tr><td>\nYield\n</td><td>\nyield a\n</td></tr><tr><td>\nSpread\n</td><td>\n...a\n</td></tr><tr><td>\nKommasequenz\n</td><td>\nfunktionsaufruf ( a, b, c)\n</td></tr> \t\n </table>"}]}