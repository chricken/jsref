{"content":[{"type":"paragraph","crDate":1697803143854,"chDate":1697803445349,"text":"WebSocket ist ein Netzwerkprotokoll, das eine bidirektionale, zuverlässige und schnelle Kommunikation zwischen einem Client und einem Server ermöglicht. Es basiert auf TCP und ermöglicht es, Daten in Echtzeit zu übertragen sowie vom Server den Client anzusprechen.\nWebSockets werden häufig in Webanwendungen verwendet, die eine Echtzeitkommunikation erfordern, wie z. B.:\n<ul>\n<li>Chat-Anwendungen</li>\n<li>Spiele</li>\n<li>Finanzanwendungen</li>\n<li>Echtzeit-Datenvisualisierung</li>\n<li>Kooperatives Arbeiten</li>\n<li>Internet of Things</li>\n<li>etc.</li>\n</ul>"},{"type":"subheader","crDate":1697807428535,"chDate":1697807432585,"text":"Server"},{"type":"paragraph","crDate":1697806705147,"chDate":1697808872743,"text":"Um über Websockets kommunizieren zu können, muss das Protokoll zunächst auf dem Server installiert werden. Hierzu bieten sich verschiedene Module an.\nWir entscheiden uns für socket.io, da dieses eine einfache API und eine Frontend-Library bietet.\nEin pragmatischer Weg, um socket.io einzubinden erfolgt in drei Schritten:\n<ol>\n<li>Express: Zunächst wird ein Express-Server eingerichtet. Dieser erleichtert den Zugriff auf die statischen Dateien erheblich.</li>\n<li>Http: Der http-Server ist notwendig, damit socket.io die Route zur Frontend-Library anlegen kann. Dem http-Server wird mit dem Parameter der Express-Server übergeben</li>\n<li>socket.io: Der Websocket-Server wird mit dem http-Server verbunden, um die Frontend-Library einzubinden.</li>\n</ol>"},{"type":"code","crDate":1692977283898,"chDate":1692977294569,"text":"// Express\nimport express from 'express';\nconst expressServer = express();\nexpressServer.use(express.static('public'));\n\n// http\nimport http from 'http';\nconst httpServer = http.Server(expressServer);\n\n// Websocket\nimport {Server} from 'socket.io';\nconst io = new Server(httpServer);\n\n// FUNKTIONEN\nconst init = () => {\n httpServer.listen(80, err => console.log(err || 'Server läuft'));\n}\n\nio.on('connect', socket => {\n console.log(socket.id);\n})\n\n// INIT\ninit();"}]}