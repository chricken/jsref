{"content":[{"type":"paragraph","crDate":1720440636551,"chDate":1720440678322,"text":"In diesem Beispiel soll ein Worker erstellt, der eine Zahl daraufhin überprüft, ob es sich um eine Primzahl handelt.\n"},{"type":"subheader","crDate":1720440683057,"chDate":1720440685910,"text":"Worker"},{"type":"paragraph","crDate":1720440681289,"chDate":1720441306897,"text":"Der Worker wartet auf einen Message-Event und feuert dann den Handler.\nDieser verarbeitet die übergebenen Daten und sendet eine Nachricht an das Skript zurück."},{"type":"code","crDate":1720440985640,"chDate":1720441022586,"text":"const checkIfPrime = num => {\n if (num <= 1) return { num, result: false };\n num = +num;\n for (let i = 2; i < num; i++) {\n  if (num % i == 0) return { num, result: false, divisor: i }\n }\n return { num, result: true };\n}\n\nconst handleMessage = msg => {\n let result = checkIfPrime(+msg.data);\n self.postMessage(result)\n}\n\nself.addEventListener('message', handleMessage);"},{"type":"subheader","crDate":1720441313144,"chDate":1720441316641,"text":"Skript"},{"type":"paragraph","crDate":1720441323087,"chDate":1720441902192,"text":"Im Skript wartet ein Eventlistener auf den Klick eines Buttons und sendet dann eine Nachricht an den Worker. Diese Nachricht ist der Inhalt des Eingabefeldes. \nDie Antwort des Workers triggert den message-Event."},{"type":"code","crDate":1720441325707,"chDate":1720442061823,"text":"\nconst workerPrime = new Worker('/assets/js/worker_prime.js');\n\nconst checkIfPrime = () => {\n workerPrime.postMessage(elements.inpNumber.value);\n}\n\nworkerPrime.addEventListener('message', msg => {\n console.log(msg.data);\n})\n\nelements.btnSend.addEventListener('click', checkIfPrime);"},{"type":"subheader","crDate":1720443738618,"chDate":1720443744373,"text":"Erweitert"},{"type":"paragraph","crDate":1720442157683,"chDate":1720443717427,"text":"Es sei noch anzumerken, dass beliebig viele Nachrichten versendet werden können. Diese müssen auseinander gehalten werden können. Daher empfiehlt es sich, als Nachrichten Objekte zu senden, in denen vermerkt ist, welche Art von Nachricht es ist.\nMit ein wenig Mühe kann so z.B. eine Fortschrittsanzeige realisiert werden."},{"type":"code","crDate":1720443798777,"chDate":1720443906643,"text":"// Worker\n\nconst checkIfPrime = num => {\n if (num <= 1) return { num, result: false };\n num = +num;\n for (let i = 2; i < num; i++) {\n  self.postMessage({\n   status: 'progress',\n   progress: i / num\n  })\n  if (num % i == 0) return {\n   status: 'done',\n   num,\n   isPrime: false,\n   divisor: i\n  }\n }\n return {\n  status: 'done',\n  num,\n  isPrime: true\n };\n}\n\nconst handleMessage = msg => {\n let result = checkIfPrime(+msg.data);\n self.postMessage(result)\n}\n\nself.addEventListener('message', handleMessage);"},{"type":"code","crDate":1720444141253,"chDate":1720444287747,"text":"// Haupscript\n\nconst workerPrime = new Worker('/assets/js/worker_prime.js');\n\nconst checkIfPrime = () => {\n workerPrime.postMessage(elements.inpNumber.value);\n}\n\nworkerPrime.addEventListener('message', msg => {\n if (msg.data.status == 'done') {\n  let el = document.createElement('span');\n  el.innerHTML = `${msg.data.num} : ${msg.data.isPrime ? 'Prim' : msg.data.divisor}`;\n  elements.main.append(el);\n } else if (msg.data.status == 'progress') {\n  console.log(msg.data);\n }\n})\n\nelements.btnSend.addEventListener('click', checkIfPrime);\n"}]}