{"content":[{"type":"paragraph","crDate":1715352635687,"chDate":1715693106727,"text":"Eine Klasse ist eine sehr praktische Sache, um das Erzeugen von Objekten zu vereinfachen. Allerdings m체ssen bei einer normalen Klasse f체r jedes Objekt alle Argumente 체bergeben werden. \nDas wird dann l채stig, wenn sich Argumente viel wiederholen. In solch einem Fall kann eine statische Methode vorbereitet werden, welche den Constructor mit vorbereiteten Argumenten aufruft. Die Klasse kann mit beliebig vielen Template Statics ausgestattet werden. "},{"type":"code","crDate":1715693126378,"chDate":1715693177728,"text":"class Auto {\n constructor(marke, modell, leistung, farbe) {\n  this.marke = marke;\n  this.modell = modell;\n  this.leistung = leistung;\n  this.farbe = farbe;\n }\n get bezeichner(){\n  return `${this.marke} ${this.modell}`;\n }\n static suv(farbe) {    \n  return new Auto('Hyundai', 'Kona', 160, farbe);\n }\n static micro(farbe){\n  return new Auto('Peel', 'P50', 3, farbe);\n }\n}\n\nlet mySUV = Auto.suv('Yellow');\nlet myMicro = Auto.micro('Red');\n\nconsole.log(mySUV);\nconsole.log(myMicro);"}]}