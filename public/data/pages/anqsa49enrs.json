{"content":[{"type":"paragraph","crDate":1754315586388,"chDate":1754396064415,"text":"Generics erlauben es, Parameter in einer Funktion mit beliebigen Datentypen zu füttern.\nGenerics bekommen zwei Sätze von Parametern übergeben:\n<ul>\n<li><b>&lt;S, T&gt;: </b>In spitzen Klammern Parameter, welche die gewünschten Datentypen enthalten. Die Namen werden üblicherweise als einzelne Großbuchstaben geschrieben.</li>\n<li><b>(a:S, b:string, c:T): </b>In runden Klammern die Parameter. Zu den Parametern werden die Datentypen geschrieben. Diese Datentypen können Standard-Typen oder einer der Platzhalter sein\n</ul>Für den Rückgabewert der Funktion kann auch ein Standard-Datentyp verwendet werden oder einer der Platzhalter."},{"type":"code","crDate":1754396093804,"chDate":1754396109287,"text":"const identity = <T>(value: T): T => {\n return value;\n};\n\nconst stringResult = identity<string>(\"Hello TypeScript\");  // Expliziter Typ\nconst numberResult = identity(42);     "}]}