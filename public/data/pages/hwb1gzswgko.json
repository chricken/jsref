{"content":[{"type":"paragraph","crDate":1715172732400,"chDate":1715174562930,"text":"Der Zwischenspeicher (a.k.a. Clipboard) ist ein Bestandteil des Betriebssystem und ein beliebtes Werkzeug, um Daten von einem Ort zum anderen zu kopieren oder zu verschieben. \nDas Clipboard kann eingeschränkt über Javascript gefüllt werden."},{"type":"subheader","crDate":1715174195095,"chDate":1715174239081,"text":"Kopieren"},{"type":"paragraph","crDate":1715174241175,"chDate":1715175149236,"text":"Die <i>clipboard</i>-API kann Daten in den Zwischenspeicher übertragen. Allerdings nur Strings.\nDie <i>writeText()</i>-Methode liefert dabei einen <i>Promise</i> zurück.\nEs ist zu beachten, dass das Kopieren in den Zwischenspeicher von einem Benutzer angestoßen werden muss, bspw. durch den Klick auf ein dafür vorgesehenes Element.\n"},{"type":"code","crDate":1715174782145,"chDate":1715174813376,"text":"const content = 'Dieser Text soll kopiert werden';\n\nconst copyData = () => {\n navigator.clipboard.writeText(content).then(\n  () => console.log(\"Erfolgreich kopiert\")\n ).catch(\n  error => console.error(\"Fehler beim Kopieren\", error)\n );\n}\n\nconst btnCopy = document.querySelector('#btnCopy');\nbtnCopy.addEventListener('click', copyData);"},{"type":"subheader","crDate":1715174841674,"chDate":1715174847560,"text":"Einfügen"},{"type":"paragraph","crDate":1715174850601,"chDate":1715175200415,"text":"Das Einfügen von Inhalten ist etwas problematischer. Inhalte, die durch Javascript in den Zwischenspeicher geschrieben wurden, können problemlos wieder gelesen werden. Inhalte, die aus einer anderen Quelle stammen, werden aus Sicherheitsgründen nicht gelesen und führen in einen Fehler.\nDas Einfügen aus dem Zwischenspeicher nutzt die <i>readText()</i>-Methode, die einen <i>Promise</i> zurückliefert. Die <i>then()</i>-Methode bekommt den gelesenen Wert als Parameter übergeben."},{"type":"code","crDate":1715175212513,"chDate":1715175245142,"text":"const pasteData = () => {\n navigator.clipboard.readText().then(\n  content => console.log(\"Erfolgreich gelesen\", content, typeof content)\n ).catch(\n  error => console.error(\"Fehler beim Lesen\", error)\n );\n}\n\nconst btnPaste = document.querySelector('#btnPaste');\n\nbtnPaste.addEventListener('click', pasteData);"}]}