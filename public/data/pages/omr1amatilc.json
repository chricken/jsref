{"content":[{"type":"paragraph","crDate":1693834340224,"chDate":1693834704221,"text":"JSON (<i>Javascript Object Notation</i>) ist ein leichtgewichtiges Datenformat, das einfach zu lesen und zu schreiben ist. \nEs wird häufig verwendet, um Daten zwischen Client und Server auszutauschen. JSON ist in der Lage, komplexe Datenstrukturen wie Objekte und Arrays ohne Änderungen darzustellen. Im Vergleich zu XML hat es weniger überflüssigen Overhead und hat sich hat sich mittlerweile als der de-facto-Standard etabliert. \nJSON wird von den meisten modernen Programmiersprachen gut unterstützt. JSON eignet sich gut für die Serialisierung und Übertragung von Daten, insbesondere in webbasierten Anwendungen."},{"type":"paragraph","crDate":1693899209240,"chDate":1693899295112,"text":"Um ein Objekt oder ein Array in einen String zu konvertieren, dient die <i>stringify()</i>-Methode. Diese bekommt eine Datensammlung übergeben und gibt einen String zurück."},{"type":"code","crDate":1693899024740,"chDate":1693899186795,"text":"let personenArray = [{\n Vorname: \"Max\",\n Nachname: \"Mustermann\",\n Geburtstag: \"01.01.1990\"\n}, {\n Vorname: \"Anna\",\n Nachname: \"Musterfrau\",\n Geburtstag: \"15.05.1985\"\n}, {\n Vorname: \"Peter\",\n Nachname: \"Meier\",\n Geburtstag: \"30.11.1992\"\n}];\n\nconst personenString = JSON.stringify(personenArray);\n\nconsole.log(personenString);  \n// -> [\n// ->  {\"Vorname\":\"Max\",\"Nachname\":\"Mustermann\",\"Geburtstag\":\"01.01.1990\"},\n// ->  {\"Vorname\":\"Anna\",\"Nachname\":\"Musterfrau\",\"Geburtstag\":\"15.05.1985\"},\n// ->  {\"Vorname\":\"Peter\",\"Nachname\":\"Meier\",\"Geburtstag\":\"30.11.1992\"}\n// -> ]"},{"type":"paragraph","crDate":1693899342358,"chDate":1693899685413,"text":"Ein JSON-String kann mittels der <i>parse()</i>-Methode in ein Objekt oder Array konvertiert werden."},{"type":"code","crDate":1693902693854,"chDate":1693902736427,"text":"let personenString = '[{\"Vorname\":\"Max\", ... \"Geburtstag\":\"30.11.1992\"}]';\n\nlet personenArray = JSON.parse(personenString);\n\nconsole.log(personenArray);"},{"type":"subheader","crDate":1693835002761,"chDate":1693835010425,"text":"Methoden / Getter"},{"type":"paragraph","crDate":1693834706470,"chDate":1693903012521,"text":"Da JSON ein reines <i>Datenformat</i> ist, das von verschiedenen Programmiersprachen verstanden werden soll, wird in einem JSON-String keine Methode abgelegt."},{"type":"code","crDate":1693903507601,"chDate":1693903525027,"text":"let personen = {\n vorname: \"Max\",\n nachname: \"Mustermann\",\n geburtstag: \"01.01.1990\",\n fullName(){\n  return `${this.vorname} ${this.nachname}`;\n }\n};\n\nconst personenString = JSON.stringify(personen);\nconst personenNew = JSON.parse(personenString);\nconsole.log(personenNew.fullName());"},{"type":"paragraph","crDate":1693902997057,"chDate":1693903915749,"text":"Ein bisschen komplizierter wird es, wenn in dem Objekt <i>Getter</i> gespeichert sind. Diese werden von JSON <i>nicht als Methoden</i> erkannt sondern der Rückgabewert wird im JSON-String eingetragen. Dadurch wird die Verknüpfung zwischen dem Attribut und dem Getter aufgehoben."},{"type":"code","crDate":1693903771985,"chDate":1693903891488,"text":"let personen = {\n vorname: \"Max\",\n nachname: \"Mustermann\",\n geburtstag: \"01.01.1990\",\n get fullName() {\n  return `${this.vorname} ${this.nachname}`;\n }\n};\n\nconst personenString = JSON.stringify(personen);\nconst personenNew = JSON.parse(personenString);\npersonenNew.nachname = 'Müller';\n\nconsole.log(personenNew.nachname);  // -> Müller\nconsole.log(personenNew.fullName);  // -> Max Mustermann"},{"type":"subheader","crDate":1693835068355,"chDate":1693835074217,"text":"Map, Set"},{"type":"paragraph","crDate":1693835065868,"chDate":1693835476622,"text":"JSON kann weder mit dem Datentypen <i>Map</i> noch <i>Set</i> umgehen.\nUm dies zu umgehen, können die Datentypen in Arrays konvertiert werden."},{"type":"code","crDate":1693915407698,"chDate":1693915495691,"text":"let personenMap = new Map();\n\nconst generateHash = () => (Math.random() * 1e17).toString(36);\n\nlet person1 = {\n vorname: \"Max\",\n nachname: \"Mustermann\",\n geburtstag: \"01.01.1990\"\n};\nlet person2 = {\n vorname: \"Anna\",\n nachname: \"Musterfrau\",\n geburtstag: \"15.03.1985\"\n};\nlet person3 = {\n vorname: \"Peter\",\n nachname: \"Schmidt\",\n geburtstag: \"10.07.1995\"\n};\n\npersonenMap.set(generateHash(), person1);\npersonenMap.set(generateHash(), person2);\npersonenMap.set(generateHash(), person3);\n\nlet personenString = JSON.stringify([...personenMap])\n\nconsole.log(personenString);"},{"type":"paragraph","crDate":1693915737394,"chDate":1693915900342,"text":"Die Umwandlung in eine Map oder einen Set nutzt die Tatsache, dass der <i>Map()</i>- und der <i>Set()</i>-Constructor ein Array als Parameter annehmen können. \nDieser Parameter ist der Rückgabewert der <i>parse()</i>-Methode."},{"type":"code","crDate":1693915851810,"chDate":1693915938284,"text":"let personenString = '[[\"kbpnk13rexc\", { \"Vorname\": ... \"10.07.1995\" }]]';\n\nlet personenMap = new Map(JSON.parse(personenString));\n\nconsole.log(personenMap);"}]}