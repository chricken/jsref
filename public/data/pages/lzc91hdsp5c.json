{"content":[{"type":"paragraph","crDate":1714659388570,"chDate":1714660476913,"text":"Dialog ist ein HTML-Element zum Erzeugen eines benutzerdefinierten Eingabe-Elementes.\nDer Dialog kann model sein, muss es aber nicht. Der Unterschied ist, dass ein modales Fenster Interaktionen mit der Webseite verhindert.\nDie Sichtbarkeit des Modal-Elementes wird über die Existenz des <i>open</i>-Attributs gesteuert. Ein Fehlen des des open-Attrbutes lässt das Element verschwinden."},{"type":"code","crDate":1714660632399,"chDate":1714660721014,"text":"&lt;dialog open> \n &lt;h2>Hallo Welt&lt;/h2>\n &lt;p>Dies ist ein Dialog.&lt;/p>\n&lt;/dialog>"},{"type":"paragraph","crDate":1714660893585,"chDate":1714661778819,"text":"Die Sichtbarkeit des Dialoges wird mit drei Methoden gesteuert:\n<ul>\n<li><b>showModal()</b>: Dialog als modales Fenster öffnen.</li>\n<li><b>show()</b>: Dialog nicht-modal öffnen.</li>\n<li><b>hidden()</b>: Dialog verschwinden lassen.</li>\n</ul>"},{"type":"code","crDate":1714661655966,"chDate":1714661665007,"text":"const handleClick = () => {\n elDialog.close();\n}\n\nconst elDialog = document.createElement('dialog');\ndocument.body.append(elDialog);\n\nconst elHeader = document.createElement('h2');\nelHeader.innerHTML = 'Ein Dialog';\nelDialog.append(elHeader);\n\nconst elBtnClose = document.createElement('button');\nelBtnClose.innerHTML = 'Close';\nelBtnClose.addEventListener('click', handleClick);\nelDialog.append(elBtnClose);\n\nelDialog.showModal();"},{"type":"paragraph","crDate":1714662398116,"chDate":1714662598352,"text":"Übrigens lässt sich der Hintergrund eines ModalDialogs mithilfe der <i>::backdrop</i>-Pseudoklasse gestalten."},{"type":"code","crDate":1714662401026,"chDate":1714662427021,"text":"/* CSS */\n\n::backdrop {\n background-image: linear-gradient(0deg,\n  hsl(228, 53%, 7%) 0%,\n  hsl(191, 12%, 43%) 100%);\n}"}]}