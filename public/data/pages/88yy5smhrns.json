{"content":[{"type":"paragraph","crDate":1715694043241,"chDate":1715862371443,"text":"Singletons sind beliebt, um sicherzugehen, dass aus einer Klasse nur eine Instanz erzeugt werden kann. \nDas kann dann erw체nscht sein, wenn in einem Projekt ein einzelner \"Point of Truth\" stehen soll. \nDas folgende Beispiel zeigt eine Klasse, die ein Objekt zur체ckgibt und dieses Objekt zus채tzlich in ein statisches Attribut ablegt. Falls die Klasse erneut aufgerufen wird, gibt diese einfach das zuvor abgespeicherte Objekt zur체ck."},{"type":"code","crDate":1715694405697,"chDate":1715775144602,"text":"class Counter {\n constructor(startIndex = 0) {\n  if (Counter.instance) return Counter.instance;\n  this.index = startIndex;\n\n  Counter.instance = this;\n }\n increment(){\n  this.index++;\n }\n decrement(){\n  this.index--;\n }\n static instance = false\n}\n\nconst myCounter = new Counter(45);\nconst yourCounter = new Counter(10);\n\nconsole.log(myCounter == yourCounter);\nconsole.log(myCounter.index);\nconsole.log(myCounter.index);"}]}