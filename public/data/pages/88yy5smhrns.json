{"content":[{"type":"paragraph","crDate":1715694043241,"chDate":1715694392978,"text":"Singletons sind beliebt, um sicherzugehen, dass es in einem Projekt von einer Klasse nur eine Instanz gibt.\nDa dies in JS jedoch ohnehin das Standard-Verhalten ist, müsste mir nochmal jemand den Sinn dahinter erklären. Nichtsdestotrotz soll die Funktionsweise hier vorgeführt werden."},{"type":"code","crDate":1715694405697,"chDate":1715694415569,"text":"// Singleton-Klasse\nclass Singleton {\n  constructor() {\n    // Hier können Sie die Initialisierung der Singleton-Instanz durchführen\n  }\n\n  // Statische Methode, um die Singleton-Instanz abzurufen\n  static getInstance() {\n    if (!Singleton.instance) {\n      Singleton.instance = new Singleton();\n    }\n    return Singleton.instance;\n  }\n\n  // Weitere Methoden und Eigenschaften der Singleton-Klasse\n}\n\n// Verwendung des Singletons\nconst instance1 = Singleton.getInstance();\nconst instance2 = Singleton.getInstance();\n\nconsole.log(instance1 === instance2); // true, da beide Variablen auf dieselbe Singleton-Instanz verweisen\n"}]}