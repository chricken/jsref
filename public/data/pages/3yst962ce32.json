{"content":[{"type":"paragraph","crDate":1720613838953,"chDate":1720615278246,"text":"Das <i>filter</i>-Element wird selbst nicht gerendert. \nEs erhält einen Identifier, um später anderen Elementen zugewiesen zu werden.\nDer <i>Identifier</i> (z.B. eine <i>ID</i>) kann über das filter-Attribut jedem beliebigen anderen Grafikelement zugewiesen werden.\nIm filter-Element werden die sog. \"<i>atomaren</i>\" Elemente eingetragen, welche den Filter definieren."},{"type":"code","crDate":1720614574770,"chDate":1720619533283,"text":"  &lt;svg class=\"illu\">\n\n    &lt;filter id=\"myBlur\">\n      &lt;feGaussianBlur stdDeviation=\"5\" />\n    &lt;/filter>\n\n    &lt;filter id=\"myShadow\">\n      &lt;feDropShadow dx=\"0.4\"  dy=\"0.4\"  stdDeviation=\"0.2\"  flood-opacity=\"0.5\"  />\n    &lt;/filter>\n\n    &lt;filter id=\"myDispl\">\n      &lt;feTurbulence   type=\"turbulence\"        baseFrequency=\"0.05\"        numOctaves=\"2\"        result=\"turbulence\" />      &lt;feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"50\" xChannelSelector=\"R\" yChannelSelector=\"G\" />\n\n    &lt;/filter>\n\n    &lt;circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"red\" filter=\"url(#myBlur)\" />\n    &lt;circle cx=\"150\" cy=\"50\" r=\"40\" fill=\"green\" filter=\"url(#myDispl)\" />\n    &lt;circle cx=\"50\" cy=\"150\" r=\"40\" fill=\"yellow\" filter=\"url(#myShadow)\" />\n    &lt;circle cx=\"150\" cy=\"150\" r=\"40\" fill=\"blue\" filter=\"url(#myBlur)\" />\n\n  &lt;/svg>"},{"type":"paragraph","crDate":1720614577734,"chDate":1720619515061,"text":"  <svg class=\"illu\">\n\n    <filter id=\"myBlur\">\n      <feGaussianBlur stdDeviation=\"5\" />\n    </filter>\n\n    <filter id=\"myShadow\">\n      <feDropShadow dx=\"0.4\"  dy=\"0.4\"  stdDeviation=\"0.2\"  flood-opacity=\"0.5\"  />\n    </filter>\n\n    <filter id=\"myDispl\">\n      <feTurbulence   type=\"turbulence\"        baseFrequency=\"0.05\"        numOctaves=\"2\"        result=\"turbulence\" />      <feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"50\" xChannelSelector=\"R\" yChannelSelector=\"G\" />\n\n    </filter>\n\n    <circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"red\" filter=\"url(#myBlur)\" />\n    <circle cx=\"150\" cy=\"50\" r=\"40\" fill=\"green\" filter=\"url(#myDispl)\" />\n    <circle cx=\"50\" cy=\"150\" r=\"40\" fill=\"yellow\" filter=\"url(#myShadow)\" />\n    <circle cx=\"150\" cy=\"150\" r=\"40\" fill=\"blue\" filter=\"url(#myBlur)\" />\n\n  </svg>"},{"type":"subheader","crDate":1720616620504,"chDate":1720616628874,"text":"Atomare Filter"},{"type":"paragraph","crDate":1720614965668,"chDate":1720619271716,"text":"Das filter-Element kann mit beliebig vielen atomaren Filtern gefüllt werden, welche die Darstellung steuern.\n<ul>\n<li><b>feBlend</b>:\nVerbindet zwei Elemente miteinander, basierend auf dem Blendmode.</li>\n<li><b>feColorMatrix</b>:\nVerändert die Farbe auf Basis einer Matrix.</li>\n<li><b>feComponentTransfer</b>:\nFührt eine Neuzuordnung der Daten für jedes Pixel durch. Sie ermöglicht Operationen wie Helligkeitsanpassung, Kontrastanpassung, Farbbalance oder Schwellenwertbildung.</li>\n<li><b>feComposite</b>:\nFührt die Kombination von zwei Eingabebildern durch. Mögliche Operationen: over, in, atop, out, xor, lighter oder arithmetisch.</li>\n<li><b>feConvolveMatrix</b>:\nPixel werden mit benachbarten Pixeln kombiniert. Dadurch lassen sich Effekte erzeugen, z. B. Weichzeichnen, Kantenerkennung, Schärfen, Prägen und andere.</li>\n<li><b>feDiffuseLighting</b>:\nBeleuchtet ein Bild unter Verwendung des Alphakanals als Bumpmap. Das resultierende opake RGBA-Bild ist, hängt von der Lichtfarbe, der Lichtposition und der Oberflächengeometrie der Eingabe-Bumpmap ab.</li>\n<li><b>feDisplacementMap</b>:\nVerwendet die Pixelwerte des Bildes aus dem Parameter <i>in2</i>, um die Pixel des Bildes aus dem Parameter <i>in</i> räumlich zu verschieben.</li>\n<li><b>feDropShadow</b>:\nErzeugt einen Schlagschatten des Eingabebildes.</li>\n<li><b>feFlood</b>:\nFüllt den Teilbereich des Filters mit der durch <i>flood-color</i> und <i>flood-opacity</i> definierten Farbe und Deckkraft.</li>\n<li><b>feGaussianBlur</b>:\nVerwischt das Eingabebild um den in <i>stdDeviation</i> angegebenen Wert.</li>\n<li><b>feImage</b>:\nHolt Bilddaten aus einer externen Quelle und liefert die Pixeldaten als Ausgabe</li>\n<li><b>feMerge</b>:\nErmöglicht die gleichzeitige Anwendung von Filtereffekten anstelle einer sequentiellen Anwendung</li>\n<li><b>feMorphology</b>:\nBilddaten zu erodieren oder zu erweitern. Vor allem für Effekte wie Vergrößerung oder Verkleinerung.</li>\n<li><b>feOffset</b>:\nDas Eingabebild als Ganzes wird um die in den Attributen <i>dx</i> und <i>dy</i> angegebenen Werte versetzt.</li>\n<li><b>feSpecularLighting</b>:\nBeleuchtet eine Quellgrafik unter Verwendung des Alphakanals als Bumpmap. Das resultierende Bild ist ein RGBA-Bild, das auf der Lichtfarbe basiert. Die Beleuchtungsberechnung folgt der Standard-Spiegelungskomponente des Phong-Beleuchtungsmodells</li>\n<li><b>feTile</b>:\nFüllt ein Zielrechteck mit einem wiederholten, gekachelten Muster eines Eingabebildes..</li>\n<li><b>feTurbulence</b>:\nErstellt ein Bild unter Verwendung einer Perlin-Noise-Funktion. Sie ermöglicht die Synthese von künstlichen Texturen wie Wolken oder Marmor. Das resultierende Bild füllt den gesamten primitiven Teilbereich des Filters aus.</li>\n</ul>"}]}