{"content":[{"type":"subheader","crDate":1683292281558,"chDate":1683292284237,"text":"Assign"},{"type":"paragraph","crDate":1692279980346,"chDate":1692280113192,"text":"Die assign()-Methode erlaubt es, die Attribute eines Objekte in ein anderes Objekt zu kopieren."},{"type":"code","crDate":1692280119072,"chDate":1692280565819,"text":"const suv = {\n type: 'suv',\n wheels: 4,\n farbe: 'weiß'\n}\n        \nconst meinAuto = {\n marke: 'Hyundai',\n modell: 'Tuscon',\n leistungKW: 162,\n farbe: 'schwarz'\n}\n\nObject.assign(suv, meinAuto);\n\nconsole.log(suv);  // -> {\n                   // ->  type: \"suv\", \n                   // ->  wheels: 4, \n                   // ->  farbe: \"schwarz\", \n                   // ->  marke: \"Hyundai\", \n                   // ->  modell: \"Tuscon\", \n                   // ->  leistungKW: 162 \n                   // -> }"},{"type":"paragraph","crDate":1692280573240,"chDate":1692280736219,"text":"Dies ist insbesondere praktisch, um in einer Klasse neue Attribute einzuhängen."},{"type":"code","crDate":1692281307867,"chDate":1692281396742,"text":"// Klassische Syntax\nclass Auto {\n constructor(marke, modell, farbe, kw, leasing) {\n  this.marke = marke;\n  this.modell = modell;\n  this.farbe = farbe;\n  this.kw = kw;\n  this.leasing = leasing;\n }\n}\n\nconst myAuto = new Auto('VW', 'ID3', 'Weiß', 100, false);\n\nconsole.log(myAuto);"},{"type":"code","crDate":1692281369006,"chDate":1692281441430,"text":"// Kompakte Syntax\nclass Auto {\n constructor(marke, modell, farbe, kw, leasing) {\n  Object.assign(this, {marke, modell, farbe, kw, leasing});\n }\n}\n\nconst myAuto = new Auto('VW', 'ID3', 'Weiß', 100, false);\n\nconsole.log(myAuto);"}]}