{"content":[{"type":"subheader","crDate":1696230166286,"chDate":1696230171766,"text":"Font definieren"},{"type":"paragraph","crDate":1696230259318,"chDate":1696231679334,"text":"Der erste Schritt bei der Erstellung von Schrift im Canvas ist die Definition der gewünschten Schrift.\nDies geschieht über das <i>font</i>-Attribut. Dieses muss mindestens die Schriftgröße und die Schriftfamilie enthalten. Dabei muss die Schriftfamilie der letzte Eintrag sein und kann kann mehrere Alternativen enthalten."},{"type":"code","crDate":1696231969331,"chDate":1696231974156,"text":"ctx.font = '30px Tahoma, Geneva, Verdana, sans-serif';\nctx.fillText('Hallo Welt', 10, 120);"},{"type":"paragraph","crDate":1696232018296,"chDate":1696232556381,"text":"Zusätzlich kann das Font-Attribut die Attribute bold und/oder italic annehmen.\nDiese können in beliebiger Reihenfolge vor der Größenangabe erfolgen.\n"},{"type":"code","crDate":1696232570960,"chDate":1696232575089,"text":"ctx.font = 'bold italic 30px courier new';\nctx.fillText('Hallo Welt', 10, 120);"},{"type":"subheader","crDate":1696241612787,"chDate":1696241619786,"text":"Text darstellen"},{"type":"paragraph","crDate":1696241622787,"chDate":1696242819917,"text":"Die <i>fillText()</i>- und <i>strokeText()</i>-Methode zeichnet den Text in das Canvas. \nfillText() füllt den geschriebenen Text, strokeText() zieht nur die Outline.\nDie Methoden nehmen die folgenden Parameter an:\n<ul>\n<li>Zu schreibender Text</li>\n<li>Abstand vom linken Rand</li>\n<li>Abstand der Baseline vom oberen Rand</li>\n<li>Maximale Breite. Zu breiter Text wird angepasst.</li>\n</ul>"},{"type":"code","crDate":1696242834459,"chDate":1696242849912,"text":"ctx.font = '30px myFace';\nctx.fillText('Hallo Welt.', 20, 120, 50);"},{"type":"subheader","crDate":1696229691647,"chDate":1696229766776,"text":"Custom Fonts"},{"type":"paragraph","crDate":1696234719343,"chDate":1696235040271,"text":"Grundsätzlich kann das Canvas auf alle Schriftfamilien zugreifen, die im CSS definiert worden sind.\nNatürlich funktioniert das nur, wenn die Schriftdatei <i>geladen</i> werden konnte. Das bedeutet, dass das Laden Schriften mit einem <i>load</i>-Eventlistener abgewartet werden muss."},{"type":"code","crDate":1696235050639,"chDate":1696235059742,"text":"/* CSS */\n@font-face {\n font-family: \"myFace\";\n src: url(\"./fonts/alexbrush-regular-webfont.woff2\");\n}"},{"type":"code","crDate":1696235061839,"chDate":1696241258581,"text":"// Javascript\nconst init = () => {\n const c = document.querySelector('canvas');\n const ctx = c.getContext('2d');\n ctx.font = '30px myFace';\n ctx.fillText('Hallo', 20, 120);\n}\n\n// INIT\nwindow.addEventListener('load', init);"},{"type":"subheader","crDate":1696243065092,"chDate":1696243073085,"text":"Textbreite ermitteln"},{"type":"paragraph","crDate":1696243079723,"chDate":1696247802505,"text":"Manchmal ist es notwendig zu wissen, wie breit ein Text wird, bevor er gerendert wird.\nDie measureText()-Methode liefert ein textMetrics-Objekt. Dieses liefert neben anderen Informatioen auch die Breite.\nDas kann hilfreich sein, um:\n<ul>\n<li>Text zu zentrieren</li>\n<li>Die richtige Schrift zu wählen</li>\n<li>Text passend zu kürzen</li>\n<li>oder mehr</li>\n</ul>\n"},{"type":"code","crDate":1696243683679,"chDate":1696243694815,"text":"ctx.font = '30px myFace';\nlet text = 'Hallo Welt';\nlet myText = ctx.measureText(text);\nconsole.log(myText.width);  // -> 127.8\n\nctx.font = '50px myFace';\ntext = 'Hallo Welt';\nmyText = ctx.measureText(text);\nconsole.log(myText.width);  // -> 213"}]}