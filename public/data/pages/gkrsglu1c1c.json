{"content":[{"type":"subheader","crDate":1691568015817,"chDate":1691652042498,"text":"parentElement"},{"type":"paragraph","crDate":1691567554484,"chDate":1691568001119,"text":"Um das Parent-Element eines bestehenden Elementes auszuwählen, dient die <i>parentElement</i>-Eigenschaft.\nDiese Eigenschaft enthält das Parent-Element eines bestehenden Elementes. Dieses Parent-Element kann dann für alle Zwecke verwendet werden.\nDa dies eine Eigenschaft ist und keine Methode, werden keine Klammern benötigt."},{"type":"code","crDate":1691567723331,"chDate":1691651099335,"text":"const myElement = document.querySelector('#first');\nconst myParent = myElement.parentElement;\n\nconsole.log(myParent);  // -> &lt;main>\n\nconst newElement = document.createElement('section');\nnewElement.innerText = 'Hallo Welt';\nnewElement.id = 'fourth';\nmyParent.append(newElement);"},{"type":"subheader","crDate":1691651712699,"chDate":1691651721441,"text":"children"},{"type":"paragraph","crDate":1691651725243,"chDate":1691651905085,"text":"Die <i>children</i>-Eigenschaft enthält eine HTML-Collection mit allen <i>direkten Kindern</i>. \nDiese sollte in ein Array umgewandelt werden, um auf die Array-Methoden zurückgreifen zu können."},{"type":"code","crDate":1691651908589,"chDate":1691652532833,"text":"const myElement = document.querySelector('#third');\n\nconst myChildren = Array.from(myElement.children);\n// Mit der Spread-Syntax\n// const myChildren = [...myElement.children];\n\nconsole.log(myChildren);  // -> Array(3) [ h2, p, ul ]"},{"type":"subheader","crDate":1691652854674,"chDate":1691652862976,"text":"childNodes"},{"type":"paragraph","crDate":1691652865328,"chDate":1691656345943,"text":"Die <i>childNodes</i>-Eigenschaft enthält alle Knoten. Das sind neben den DOM-Objekten auch Text-Knoten. In der Praxis als Webentwickler:in wird diese Möglichkeit eigentlich nicht benötigt."},{"type":"code","crDate":1691652867456,"chDate":1691656473014,"text":"const myElement = document.querySelector('#third');\n\nconst myChildren = Array.from(myElement.childNodes);\n\n// -> Array(7) [ #text, h2, #text, p, #text, ul, #text ]\nconsole.log(myChildren); "},{"type":"subheader","crDate":1691652052476,"chDate":1691652102035,"text":"querySelector"},{"type":"paragraph","crDate":1691652105271,"chDate":1691652316160,"text":"Die querySelector()- und querySelectorAll()-Methode funktioniert auch von DOM-Elementen aus.\nDamit lassen sich auch verschachtelte Kind-Elemente finden."},{"type":"code","crDate":1691652325192,"chDate":1691652492363,"text":"const myElement = document.querySelector('#third');\n\nconst myChildren = Array.from(myElement.querySelectorAll('li'));\n// const myChildren = [...myElement.querySelectorAll('li')];\n\nconsole.log(myChildren);  // -> Array(6) [ li, li, li, li, li, li ]"}]}