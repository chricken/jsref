{"content":[{"type":"subheader","crDate":1691657116473,"chDate":1691657119552,"text":"remove()"},{"type":"paragraph","crDate":1691656780089,"chDate":1691659146423,"text":"Die <i>remove()</i>-Methode funktioniert sehr einfach. Sie entfernt das Element aus dem DOM.\nDabei ist zu beachten, dass das Element nur aus dem DOM entfernt wird und damit nicht mehr sichtbar ist. Wenn das entfernte Element in einer Variablen liegt, kann es später problemlos wieder eingehängt werden."},{"type":"code","crDate":1691659662963,"chDate":1691659664755,"text":"const myElement = document.querySelector('#third');\nconst otherElement = document.querySelector('#first');\n\nmyElement.remove();\n\nsetTimeout(() => {\n    otherElement.append(myElement);\n}, 1000)"},{"type":"subheader","crDate":1691660778010,"chDate":1691660944950,"text":"removeChild()"},{"type":"paragraph","crDate":1691660789282,"chDate":1691661323598,"text":"In (sehr) alten Tutorials werden Elemente noch mithilfe der <i>removeChild()</i>-Methode entfernt. Das liegt schlicht daran, dass es die remove()-Methode von oben damals noch nicht gab. Die removeChild()-Methode hat seit der Einführung von remove() (~2013) ihre Bedeutung komplett verloren und wird hier nicht weiter betrachtet."},{"type":"subheader","crDate":1691661336571,"chDate":1691661340834,"text":"Element leeren"},{"type":"paragraph","crDate":1691661344579,"chDate":1691661569730,"text":"Wenn der Inhalt eines Elementes komplett entfernt werden sollen, dann bietet sich die innerHTML-Eigenschaft an. Wenn diese mit einem leeren String überschrieben wird, dann wird der gesamte Inhalt entfernt."},{"type":"code","crDate":1691661708536,"chDate":1691661710248,"text":"let myElement = document.querySelector('#second');\nmyElement.innerHTML = '';"},{"type":"subheader","crDate":1691659761973,"chDate":1691659772770,"text":"filter()"},{"type":"paragraph","crDate":1691659775810,"chDate":1691659958766,"text":"Ein anderer sehr eleganter Weg ist eine Kombination aus dem Auswählen von Elementen, dem Filtern und anschließenden erneuten Einhängen.\nDieser Weg ist dann hilfreich, wenn keine einzelnen Elemente gelöscht werden sollen, sondern ganze Bereiche gefiltert werden.\nIm ersten Schritt werden alle Kinder eines Elementes selektiert.\nDanach wird diese Selektion nach Wunsch gefiltert.\nDann wird das Eltern-Element geleert und schließlich werden die nach dem Filter-Prozess übrigen Elemente wieder eingefügt."},{"type":"code","crDate":1691660548113,"chDate":1691660550285,"text":"let myElements = [...document.querySelectorAll('#third ul >li')];\nconst myParent = myElements[0].parentElement;\nmyParent.innerHTML = '';\n\nmyElements = myElements.filter(el => el.innerHTML.includes('erstellen'));\n\nmyParent.append(...myElements)"}]}