{"content":[{"type":"subheader","crDate":1701955770623,"chDate":1701956059339,"text":"push()"},{"type":"paragraph","crDate":1701955769030,"chDate":1701956019542,"text":"Die push()-Methode hängt die übergeben Argumente an das Array an."},{"type":"code","crDate":1701956033778,"chDate":1701956050426,"text":"const createNumber = (min, max) => ~~(Math.random() * (max - min + 1) + min);\n\nconst myArray = [];\nmyArray.push(createNumber(0,100));\nmyArray.push(30, 40);\n\nconsole.log(myArray);"},{"type":"subheader","crDate":1701956159219,"chDate":1701956163027,"text":"pop()"},{"type":"paragraph","crDate":1701956190656,"chDate":1701956855566,"text":"Die <i>pop()</i>-Methode entfernt das letzte Element eines Arrays.\nSie nimmt keine Argumente an."},{"type":"code","crDate":1701956193367,"chDate":1701956202070,"text":"const myArray = [21, 54, 87, 98];\nmyArray.pop();\nconsole.log(myArray);"},{"type":"subheader","crDate":1701956287873,"chDate":1701956292122,"text":"splice()"},{"type":"paragraph","crDate":1701956300326,"chDate":1701957274230,"text":"Die <i>splice()</i>-Methode kann gleichzeitig eine beliebige Anzahl an Slots entfernen und neue Inhalte einfügen. Das erste Argument bestimmt, an welchem Index Elemente entfernt und eingefügt werden.\nDas zweite Argument bestimmt, bestimmt, wieviele Slots entfernt werden.\nAlle weiteren Slots werden ab dem angegebenen Index eingefügt."},{"type":"code","crDate":1701956690280,"chDate":1701957936564,"text":"const myArray = [... new Array(20)].map((val, i) => i);\nconsole.log(...myArray);\n\nmyArray.splice(5, 10)\nconsole.log(...myArray);\n\nmyArray.splice(3, 0, 10, 11, 13);\nconsole.log(...myArray);\n\nmyArray.splice(3, 3, 20, 21, 22);\nconsole.log(...myArray);"},{"type":"subheader","crDate":1701956304034,"chDate":1701956308593,"text":"toSpliced()"},{"type":"paragraph","crDate":1701958607362,"chDate":1701959123388,"text":"Die toSpliced()-Methode funktioniert ebenso wie die splice-Methode. Allerdings ist sie nicht-destruktiv und verändert nicht das Array direkt. Vielmehr wird eine veränderte Kopie des Arrays zurückgegeben.\n<b>Achtung:</b> Die toSpliced()-Methode wurde erst 2023 eingeführt und wird noch nicht flächendeckend unterstützt."},{"type":"code","crDate":1701958755390,"chDate":1701959097805,"text":"const myArray = [... new Array(10)].map((val, i) => i);\nconsole.log(...myArray);  // -> 0 1 2 3 4 5 6 7 8 9\n\nlet otherArray = myArray.toSpliced(2, 7)\nconsole.log(...myArray);  // -> 0 1 2 3 4 5 6 7 8 9\nconsole.log(...otherArray);  // -> 0 1 9\n\notherArray = myArray.toSpliced(2, 7, 100, 200, 300)\nconsole.log(...myArray);  // -> 0 1 2 3 4 5 6 7 8 9\nconsole.log(...otherArray);  // -> 0 1 100 200 300 9"}]}