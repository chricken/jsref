{"content":[{"type":"paragraph","crDate":1685447559293,"chDate":1692371591356,"text":"Ein Set ist eine ungeordnete Sammlung einzigartiger Werte. Es arbeitet vollständig ohne Schlüssel. Das Set ist vor allem erfunden worden, um Iterationen zu vereinfachen.\nUm ein Set anzulegen, kann der <i>Set</i>-Constructor verwendet werden.\nMit der <i>add()</i>-Methode werden neue Elemente angehängt.."},{"type":"code","crDate":1692371354901,"chDate":1692371813172,"text":"const mySet = new Set();\n\nmySet.add('Apple');\nmySet.add('Peach');\nmySet.add('Cherry');\nmySet.add('Banana');\nmySet.add('Pineapple');\n\nconsole.log(mySet); // -> Set(5) [ \"Apple\", \"Peach\", \"Cherry\", \"Banana\", \"Pineapple\" ]"},{"type":"subheader","crDate":1692372153331,"chDate":1692372157492,"text":"Default"},{"type":"paragraph","crDate":1692372221174,"chDate":1692372280763,"text":"Der Set-Constructor kann mit einem Default-Wert aufgerufen werden. Dieser Wert muss ein Array sein, dessen Attribute in der bestehenden Reihenfolge in das Set eingetragen werden."},{"type":"code","crDate":1692372349038,"chDate":1692372354838,"text":"const myArray = [14, 25, 36];\n\nconst mySet = new Set(myArray);\n\nconsole.log(mySet);  // -> Set(3) [ 14, 25, 36 ]"},{"type":"subheader","crDate":1692371659487,"chDate":1692371679550,"text":"Dupletten"},{"type":"paragraph","crDate":1692371377228,"chDate":1692371925028,"text":"Eine Besonderheit von Sets ist, dass sie keine Dupletten erlauben. Wird versucht, ein Element einzuhängen, so wird dieser Versuch ignoriert."},{"type":"code","crDate":1692371769560,"chDate":1692371895535,"text":"const mySet = new Set();\n\nmySet.add('Apple');\nmySet.add('Peach');\nmySet.add('Cherry');\n\nmySet.add('Apple');\nmySet.add('Peach');\n\nconsole.log(mySet);  // -> Set(3) [ \"Apple\", \"Peach\", \"Cherry\" ]"},{"type":"paragraph","crDate":1692371920654,"chDate":1692372144316,"text":"Dieses Verhalten kann bspw. dazu verwendet werden, Arrays von Dupletten zu vermeiden."},{"type":"code","crDate":1692372097776,"chDate":1692372108528,"text":"let myArray = [1, 2, 3, 2, 3, 2, 1, 2, 1, 2, 3];\n\nmyArray = [...new Set(myArray)];\n\nconsole.log(myArray);  // -> Array(3) [ 1, 2, 3 ]"},{"type":"subheader","crDate":1692372939668,"chDate":1692372962898,"text":"has()-Methode"},{"type":"paragraph","crDate":1692372949307,"chDate":1692373043175,"text":"Die <i>has()</i>-Methode überprüft, ob das Set ein bestimmtes Attribut enthält."},{"type":"code","crDate":1692373106528,"chDate":1692373116207,"text":"const mySet = new Set([14, 25, 36]);\n\nconsole.log(mySet.has(14));  // -> true\nconsole.log(mySet.has(15));  // -> false"}]}