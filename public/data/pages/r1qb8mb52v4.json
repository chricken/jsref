{"content":[{"type":"paragraph","crDate":1689168097353,"chDate":1689169664466,"text":"Routen und Middlewares bekommen als zweiten Parameter ein Objekt übergeben, das viele Methoden enthält, um eine Antwort zum Client zu senden.\nDie wichtigsten dieser Methoden sind:\n"},{"type":"subheader","crDate":1689169991654,"chDate":1689169996685,"text":"send()"},{"type":"paragraph","crDate":1689169998750,"chDate":1689170111774,"text":"Die send()-Methode sendet einen String an den Client."},{"type":"code","crDate":1689170000126,"chDate":1689170003878,"text":"import express from 'express';\nconst server = express();\n\nserver.use('/', (req, res) => {\n    res.send('Hallo Welt')\n});\n\nserver.listen(8000, err => console.log(err || 'Server läuft'));"},{"type":"subheader","crDate":1689170366026,"chDate":1689170369420,"text":"json()"},{"type":"paragraph","crDate":1689170371956,"chDate":1689170553971,"text":"Die json()-Methode wandelt den übergebenen Parameter in einen JSON.String um und gibt diesen an den Client zurück."},{"type":"code","crDate":1689170373793,"chDate":1689170378897,"text":"import express from 'express';\nconst server = express();\n\nserver.use('/', (req, res) => {\n    const meinAuto = {\n        marke: 'Hyundai',\n        modell:'i20',\n        leistungKW: 62,\n    }\n    res.json(meinAuto)\n});\n\nserver.listen(8000, err => console.log(err || 'Server läuft'));"},{"type":"subheader","crDate":1689171203988,"chDate":1689171217500,"text":"set()"},{"type":"paragraph","crDate":1689171220323,"chDate":1689171267886,"text":"Mit der set()-Methode lässt sich ein neuer <i>Header</i> in die Antwort schreiben"},{"type":"code","crDate":1689171272791,"chDate":1689171285301,"text":"import express from 'express';\nconst server = express();\n\nserver.use('/', (req, res) => {\n    res.set('Hallo', 'Welt');\n    res.send('OK')\n});\n\nserver.listen(8000, err => console.log(err || 'Server läuft'));\n"},{"type":"subheader","crDate":1689171312467,"chDate":1689171316362,"text":"get()"},{"type":"paragraph","crDate":1689171319066,"chDate":1689171458928,"text":"Die get()-Methode ließt den Wert eines Headers aus.\nDies ist besonders hilfreich, wenn die Header mittels mehrerer Middlewares erweitert wurden."},{"type":"code","crDate":1689171413155,"chDate":1689171472959,"text":"import express from 'express';\nconst server = express();\n\nserver.use('/', (req, res) => {\n res.set('Hallo', 'Welt');\n console.log(res.get('Hallo'));  // -> Welt\n res.send('OK')\n});\n\nserver.listen(8000, err => console.log(err || 'Server läuft'));\n"},{"type":"subheader","crDate":1689171713429,"chDate":1689171717557,"text":"redirect()"},{"type":"paragraph","crDate":1689171738716,"chDate":1689171761250,"text":"Weißt den Client an, die angegebene URL zu öffnen."},{"type":"code","crDate":1689171852149,"chDate":1689171867306,"text":"import express from 'express';\nconst server = express();\n\nserver.use('/anfrage', (req, res) => {\n    console.log('Anfrage angekommen');\n    res.redirect('/hash');\n});\n\nserver.get('/hash', (req, res) => {\n    let hash = (Math.random() * 1e16).toString(36);\n    res.send(hash);\n})\n\nserver.listen(8000, err => console.log(err || 'Server läuft'));\n"},{"type":"subheader","crDate":1689171881877,"chDate":1689171885728,"text":"render()"},{"type":"subheader","crDate":1689171892272,"chDate":1689171896373,"text":"sendfile()"},{"type":"subheader","crDate":1689171905352,"chDate":1689171912591,"text":"download()"}]}