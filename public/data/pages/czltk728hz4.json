{"content":[{"type":"paragraph","crDate":1699883475986,"chDate":1699884118156,"text":"ES6-Module sind ein Weg, Code in voneinander unabhängigen Einheiten zu unterteilen. Dadurch wird der Code übersichtlicher, einfacher zu entwickeln, zu verstehen und zu warten.\nUm ES6 Module verwenden zu können, wird dem <i>script</i>-Tag das type-Attribut mit dem Wert module gegeben."},{"type":"code","crDate":1699884331366,"chDate":1699884359004,"text":"&lt;script src=\"./assets/js/index.js\" type=\"module\" defer>&lt;/script>"},{"type":"paragraph","crDate":1699884481650,"chDate":1699884665277,"text":"Jedes auf diese Weise eingebundene Script hat seinen <i>eigenen globalen Scope</i>, andere Scripte können darauf nicht mehr zugreifen.\nDas globale Scope eines anderen Scripts <i>ohne type-Attribut</i> ist auch im Modul ansprechbar."},{"type":"subheader","crDate":1699885073054,"chDate":1699885079721,"text":"Module"},{"type":"paragraph","crDate":1699884736824,"chDate":1699885541247,"text":"Code kann in mehrere Dateien untergliedert werden, diese Dateien stellen die <i>Module</i> dar.\nModule sind in sich abgeschlossen und haben keinen Zugriff auf den <i>global Scope</i> eines anderen Moduls. Um Code eines Moduls in einem anderen Module zugreifbar zu machen, muss ein Export stattfinden. "},{"type":"subheader","crDate":1699885370562,"chDate":1699885376500,"text":"Default Export"},{"type":"paragraph","crDate":1699885379482,"chDate":1699885819498,"text":"Es gibt zwei verschiedene Wege eines Exports. Der einfachste ist ein default Export, der durch das Schlüsselwort <i>default</i> markiert wird.\nDer Befehl <i>export default</i> bekommt einen beliebigen Wert übergeben, welcher dann an das importierende Script übergeben wird.\nAls Beispiel soll ein Modul angelegt werden, das die Methoden zur Berechnung der Daten eines Kreises liefert."},{"type":"code","crDate":1699885516217,"chDate":1699885858248,"text":"// Exportierendes Script\nconst kreis = {\n flaeche(radius){\n  return radius ** 2 * Math.PI;\n },\n umfang(radius){\n  return radius * 2 * Math.PI;\n },\n}\nexport default kreis;"},{"type":"subheader","crDate":1699885940034,"chDate":1699885946122,"text":"Default Import"},{"type":"paragraph","crDate":1699885847240,"chDate":1699886068695,"text":"Um den exportieren Code aus dem Modul verwenden zu können, muss dieses in einem anderen Modul importiert werden.\nDazu dient der import-Befehl. Die aus dem Modul exportierten Daten werden in eine Variable mit dem angegebenen Namen geschrieben.\nDann können die Daten verwendet werden."},{"type":"code","crDate":1699886162014,"chDate":1699886181617,"text":"import kreis from './kreis.js';\n\nlet umfang = kreis.flaeche(10);\nconsole.log(umfang);             // -> 314.1592653589793"},{"type":"paragraph","crDate":1700229368195,"chDate":1700229550798,"text":"Aufgrund des copy-by-reference-Verhaltens werden Objekte als Referenz importiert.\nDas hat zur Folge, dass Objekte die in mehreren Modulen importiert werden, dasselbe Objekt sind.\nWird in einem Modul eine Änderung am Objekt vorgenommen, kann die Änderung auch in den anderen Modulen festgestellt werden."},{"type":"code","crDate":1700229820003,"chDate":1700229853208,"text":"// index.js (Hauptdatei)\nimport kreis from './kreis.js';\nimport myModule from './mymodule.js';\n\nconsole.log(kreis.radius);  // -> 20"},{"type":"code","crDate":1700229856113,"chDate":1700230654854,"text":"// kreis.js\n'use strict';\n\nconst kreis = { radius:10 };\n\nexport default kreis;"},{"type":"code","crDate":1700230640449,"chDate":1700230690317,"text":"// mymodule.js\n'use strict';\n\nimport kreis from './kreis.js';\nkreis.radius *= 2;\nconst myModule = {};\n\nexport default myModule;"},{"type":"subheader","crDate":1700231161451,"chDate":1700231169570,"text":"Named Export"},{"type":"paragraph","crDate":1700231173706,"chDate":1700231836892,"text":"Neben dem default export kann auch ein benannter Export vorgenommen werden.\nDas hat ggf. den Vorteil, dass der Import denselben Namen haben \"muss\" wie im Modul. Dadurch werden Dinge wie automatische Umbenennungen erleichtert.\nDer Export bekommt eine neu angelegte Variable übergeben.\nIn einem Modul können so viele Exports wie gewünscht vorgenommen werden.\nBeim Import muss diese Variable mithilfe von destructuring entnommen werden."},{"type":"code","crDate":1700231488668,"chDate":1700231682013,"text":"// named.js\n'use strict';\n\nconst x = 12;\n\nexport let a = x;\nexport let b = x * 2;\nexport let c = x * 3;"},{"type":"code","crDate":1700231648537,"chDate":1700231675117,"text":"// index.js\n'use strict';\n\nimport { a, b, c } from './named.js';\n\nconsole.log(a);  // -> 12\nconsole.log(b);  // -> 24\nconsole.log(c);  // -> 36"}]}