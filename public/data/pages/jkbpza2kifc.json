{"content":[{"type":"paragraph","crDate":1693400499215,"chDate":1693401186989,"text":"Eine <i>Direktive</i> ist ein von Vue erzeugtes zusätzliches Attribut für DOM-Elemente. Jede Direktive beginnt mit <i>v-</i>.\nManche Direktiven bekommen Parameter übergeben. Diese Parameter sind immer Strings, die dann in der Direktive interpretiert werden."},{"type":"subheader","crDate":1693400881267,"chDate":1693400941854,"text":"Sichtbarkeit"},{"type":"paragraph","crDate":1693400944518,"chDate":1693401127362,"text":"Mit den drei Direktive <i>if</i>, <i>else</i> und <i>if-else</i> kann die Sichtbarkeit eines Elementes gesteuert werden.\nDer Parameter wird als Boolean interpretiert. Wenn es ein <i>true</i> ist, wird das Element angezeigt. Sonst nicht."},{"type":"code","crDate":1693401008298,"chDate":1693401262959,"text":"&lt;p v-if=\"!(x && y)\">\n Bitte füllen Sie beide Eingaben aus\n&lt;/p>\n&lt;p v-else-if=\"isNaN(x * y)\">\n Bitte nur Zahlen eingeben\n&lt;/p>\n&lt;p v-else>\n {{ x * y }}\n&lt;/p>"},{"type":"subheader","crDate":1693401218547,"chDate":1693401697897,"text":"Bidirektionale Datenbindung"},{"type":"paragraph","crDate":1693401232615,"chDate":1693401679378,"text":"Die <i>v-model</i>-Direktive verknüpft ein beliebiges Eingabe-Element (<i>input</i>, <i>textarea</i>, <i>select</i>) mit einer Variable.\nJede Änderung in der Variablen wird in dem Eingabe-Element dargestellt. Jede neue Eingabe wird sofort in die Variable geschrieben. Falls diese Variable irgendwo in der App verwendet wird, so wird auch dieses Element sofort aktualisiert."},{"type":"code","crDate":1693401472529,"chDate":1693401512374,"text":"// JS\ncreateApp({\n data() {\n  return {\n   x: 14,\n   y: 25\n  }\n }\n}).mount('#app');"},{"type":"code","crDate":1693401514526,"chDate":1693401719959,"text":"// HTML\n&lt;input v-model=\"x\" />\n&lt;input v-model=\"y\" />\n&lt;p>\n {{ x * y }}\n&lt;/p>"},{"type":"subheader","crDate":1693401217872,"chDate":1693401730582,"text":"Text-Inhalt"},{"type":"paragraph","crDate":1693401733161,"chDate":1693402127353,"text":"Die <i>v-text</i>-Direktive beschreibt das <i>innerText</i>-Attribut. Das bedeutet, dass Inhalte als blanker Text eingetragen werden. \nHTML-Tags werden nicht interpretiert. Als Alternative kann auch ein Element angelegt und mit einer Expression gefüllt werden."},{"type":"code","crDate":1693401858286,"chDate":1693402931445,"text":"&lt;p v-text=\"fullName\">&lt;/p>"},{"type":"subheader","crDate":1693402131153,"chDate":1693402140584,"text":"HTML-Inhalt"},{"type":"paragraph","crDate":1693402142769,"chDate":1693402252513,"text":"Eine Expression kann keine HTML-Tags interpretieren. Die Tags würden immer sichtbar auf der Webseite erscheinen.\nDie <i>v-html</i>-Direktive hilft hier und beschreibt das <i>innerHTML</i>-Attribut. Das bedeutet, dass HTML-Tags interpretiert und entsprechedn dargestellt werden."},{"type":"code","crDate":1693402256296,"chDate":1693402922523,"text":"// JS\nconst myApp = createApp({\n data() {\n  return {\n   content: '&lt;h2>Welcome&lt;/h2>Hallo &lt;b>Welt&lt;/b>'\n  }\n }\n});"},{"type":"code","crDate":1693402375880,"chDate":1693402896805,"text":"// HTML\n&lt;div v-html=\"content\">&lt;/div>"},{"type":"subheader","crDate":1693402455467,"chDate":1693402541860,"text":"Array iterieren"},{"type":"paragraph","crDate":1693402552875,"chDate":1693402860324,"text":"Häufig kommt es vor, dass eine Datensammlung visualisiert werden muss. Dafür bietet sich die <i>v-for</i>-Direktive an. \nIm Parameter-String wird eine Variable angegeben und mit dem Schlüsselwort <i>in</i> mit dem zu iterierenden Array verbunden.\nNun wird für jeden Slot im Array das DOM-Element kopiert und die Variable enthält den Inhalt des Slots.\nEs ist eine <i>Best Practice</i>, dass Arrays ausschließlich <i>mit Objekten gefüllt</i> werden. Dadurch wird der Umgang in einer Iteration erleichtert."},{"type":"code","crDate":1693403342212,"chDate":1693403388377,"text":"// JS\nconst myApp = createApp({\n data() {\n  return {\n   buecher: [{\n    title: \"Der Herr der Ringe\",\n    author: \"J.R.R. Tolkien\",\n    isbn: \"978-3-406-20612-6\"\n   }, {\n    title: \"Harry Potter und der Stein der Weisen\",\n    author: \"J.K. Rowling\",\n    isbn: \"978-3-570-07387-5\"\n   }, {\n    title: \"Die Alchemist\",\n    author: \"Paulo Coelho\",\n    isbn: \"978-3-406-55202-9\"\n   }]\n  }\n }\n});"},{"type":"code","crDate":1693403398200,"chDate":1693403724228,"text":"// HTML\n&lt;div v-for=\"buch in buecher\">\n &lt;h3>{{buch.title}}&lt;/h3>\n &lt;p>Autor: {{buch.author}}&lt;/p>\n &lt;p>ISBN: {{buch.isbn}}&lt;/p>\n&lt;/div>"},{"type":"paragraph","crDate":1693403436294,"chDate":1693403556334,"text":"In der Iteration kann auch der <i>Index</i> verwendet werden, indem im Parameter-String zwei Parameter in einer Klammer zusammengefasst werden. Der zweite Parameter erhält dann den Index."},{"type":"code","crDate":1693403616106,"chDate":1693403703053,"text":"// HTML\n&lt;div v-for=\"(buch, index) in buecher\">\n &lt;div class=\"index\">{{index}}&lt;/div>\n &lt;h3>{{buch.title}}&lt;/h3>\n &lt;p>Autor: {{buch.author}}&lt;/p>\n &lt;p>ISBN: {{buch.isbn}}&lt;/p>\n&lt;/div>"},{"type":"subheader","crDate":1693403822538,"chDate":1693403825865,"text":"Pre"},{"type":"paragraph","crDate":1708608799395,"chDate":1708609128210,"text":"Mit der <i>pre</i>-Direktive kann die Interpretation des Inhalts des Containers unterbunden werden."},{"type":"code","crDate":1708609137778,"chDate":1708611289689,"text":"&lt;p v-pre>\n {{x * y}}  // -> {{x * y}}\n&lt;/p>"},{"type":"subheader","crDate":1693403830226,"chDate":1693403833993,"text":"Once"},{"type":"paragraph","crDate":1708609633237,"chDate":1708610056597,"text":"Element mit der <i>once</i>-Direktive werden nur einmal gerendert.\nÄnderungen in den zugrunde liegenden Daten werden in der Webseite nicht dargestellt."},{"type":"code","crDate":1708610069010,"chDate":1708611285088,"text":"&lt;!-- HTML -->\n&lt;app>\n &lt;p v-once>\n  {{x * y}}\n &lt;/p>\n&lt;/app>"},{"type":"code","crDate":1708610092651,"chDate":1708610143416,"text":"import { createApp, ref } from 'https://unpkg.com/vue@3/dist/vue.esm-browser.js'\n\nconst App = {\n data() {\n  return {\n   x: 12,\n   y: 54\n  }\n },\n methods: {\n  createNumber(min, max) {\n   return ~~(Math.random() * (max - min + 1) + min);\n  },\n  update() {\n   this.x = this.createNumber(1, 100);\n   this.y = this.createNumber(1, 100);\n  }\n },\n mounted() {\n  setInterval(this.update, 500);\n }\n}\n\ncreateApp(App).mount('app')"},{"type":"subheader","crDate":1693403836446,"chDate":1693403839361,"text":"Cloak"},{"type":"paragraph","crDate":1708610246087,"chDate":1708610857928,"text":"Der Code einer Vue-App wird im HTML eingetragen. \nBesonders bei komplexen Apps oder bei schlechten Internetverbindungen kann es daher vorkommen, dass der Vue-Code auf der Seite zu sehen ist und erst, wenn die Vue-Library geladen und gestartet ist, ersetzt wird. Um dieses Problem zu beheben, kann die <i>cloak</i>-Direktive helfen.\nDiese wird im HTML-Code eingetragen und von Vue, sobald es bereit ist, entfernt.\nIn CSS kann nun auf dieses <i>v-cloak</i>-Attribut geprüft werden und Elemente angezeigt und ausgeblendet werden."},{"type":"code","crDate":1708611080728,"chDate":1708611256459,"text":"&lt;app>\n &lt;p class=\"preloader\" v-cloak>\n  Seite wird geladen\n &lt;/p>\n &lt;p class=\"content\" v-cloak>\n  {{x * y}}\n &lt;/p>\n&lt;/app>"},{"type":"code","crDate":1708611115509,"chDate":1708611136334,"text":"import { createApp, ref } from 'https://unpkg.com/vue@3/dist/vue.esm-browser.js'\n\nconst App = {\n data() {\n  return { x: 12, y: 54 }\n }\n}\n\ncreateApp(App).mount('app')"},{"type":"code","crDate":1708611222119,"chDate":1708611243372,"text":".content[v-cloak],\n.preloader {\n display: none;\n}\n\n.content,\n.preloader[v-cloak] {\n display: block;\n}"}]}