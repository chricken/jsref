{"content":[{"type":"paragraph","crDate":1707391032615,"chDate":1707392375052,"text":"Der Error()-Konstruktor dient dazu, eine Fehlerausgabe zu erzeugen. \nDas Error-Objekt kann als Basis für benutzerdefinierte Fehlerausgaben benutzt werden. Es wird üblicherweise mit der <i>throw()</i>-Funktion ausgeworfen. Beim Aufruf von throw() wird das Programm abgebrochen. Man spricht vom \"Fehler werfen\" (throw)."},{"type":"paragraph","crDate":1707392377948,"chDate":1707392793813,"text":"Der Error()-Constructor kann eine lesbare Fehlermeldung erhalten, die in der Konsole ausgegeben wird.\nIn der Fehlermeldung wird außerdem die Folge der Funktionsaufrufe ausgegeben, die zum Fehler geführt haben.\nIm Beispiel wird im Falle, dass eine zufällige Zahl zu klein ist, ein Fehler-Objekt ausgeworfen.\n"},{"type":"code","crDate":1707394839876,"chDate":1707394884065,"text":"let threshold = 20;\n\nconst myFunc = () => {\n let num = ~~(Math.random() * 100);\n\n if (num >= threshold) {\n  console.log(num);\n } else {\n  const err = new Error(`Zahl war zu klein: ${num}`);\n  throw err;\n }\n}\n\nmyFunc();"}]}