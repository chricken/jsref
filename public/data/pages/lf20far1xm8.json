{"content":[{"type":"paragraph","crDate":1685447419560,"chDate":1688991627334,"text":"Eine Map ist ein Datentyp, der eine sehr einfache Verknüpfung zweier Informationen erlaubt.\nIm Gegensatz zu <i>Arrays</i> und <i>Objekten</i> können als Schlüssel Werte beliebigen Datentypes verwendet werden.\nIn einer Map sind die Attribute in der <i>Einfügereihenfolge</i> sortiert. D.h. eine Map kann iteriert werden.\nAußerdem kann mit dem <i>size</i>-Attribut die Anzahl der Datenslots leicht ausgelesen werden.\nAllerdings ist eine Map in der Ausführungsgeschwindigkeit deutlich langsamer als Objekte oder Arrays."},{"type":"paragraph","crDate":1688990918826,"chDate":1688991461016,"text":"Eine Map wird mit dem <i>Map()</i>-Constructor angelegt. \nDieser Constructor kann einen zweidimensionalen Array als Parameter übergeben bekommen. Dieser Parameter bestimmt dann die initial in die Map eingefügten Daten. "},{"type":"code","crDate":1688991366073,"chDate":1688992314126,"text":"const myArray = [\n [91, 21],\n ['Hallo', 32],\n [10, 74],\n ['a', 85],\n]\nconst myMap = new Map(myArray);\n\nconsole.log(myMap);  \n// -> Map(4) { 91 => 21, 'hallo' => 32, 10 => 74, 'a' => 85 }"},{"type":"paragraph","crDate":1688992406375,"chDate":1688992825847,"text":"Die Attribute einer bestehenden Map können mit der set()-Methode erweitert bzw. überschrieben werden."},{"type":"code","crDate":1688991757328,"chDate":1688992906682,"text":"const myMap = new Map();\n\nmyMap.set('hallo', 32);\nmyMap.set(10, 321);\n\nconsole.log(myMap);  // -> Map(2) { 'hallo' => 32, 10 => 321 }"},{"type":"paragraph","crDate":1688992921579,"chDate":1688992959005,"text":"Mithilfe der <i>get()</i>-Methode können einzelne Attribute ausgelesen werden."},{"type":"code","crDate":1688993013634,"chDate":1688993036731,"text":"const myMap = new Map();\n\nmyMap.set('hallo', 32);\nmyMap.set(10, 21);\n\nconsole.log(myMap.get(10));       // -> 21\nconsole.log(myMap.get('hallo'));  // -> 32"},{"type":"subheader","crDate":1688991641922,"chDate":1688991646079,"text":"Iteration"},{"type":"paragraph","crDate":1688991648192,"chDate":1688998624234,"text":"Da in einer Map die Daten in einer definierten Reihenfolge liegen, kann eine Map iteriert mit der <i>forEach()</i>-Methode werden.\n"},{"type":"code","crDate":1688998445341,"chDate":1688998576985,"text":"const myArray = [\n    [91, 21],\n    ['Hallo', 32],\n    [10, 74],\n    ['a', 85],\n]\n\nconst myMap = new Map(myArray);\n\nmyMap.forEach((val, key) => {\n    console.log(key, val);     // -> 91 21\n                               // -> Hallo 32\n                               // -> 10 74\n                               // -> a 85\n})"}]}