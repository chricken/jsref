{"content":[{"type":"paragraph","crDate":1688998861890,"chDate":1689081305714,"text":"Express ist das bekannteste und beliebteste Framework zum Erstellen eines Webservers. Es bietet eine robuste und schlanke Basis f√ºr Webanwendungen und Websites und enth√§lt zahlreiche leistungsf√§hige Funktionen.\nUm es zu benutzen, muss es zun√§chst installiert werden."},{"type":"terminal","crDate":1689081314183,"chDate":1689081322084,"text":"npm i express"},{"type":"paragraph","crDate":1689081334859,"chDate":1689081918320,"text":"Nun kann Express in das Script eingebunden werden. \nUm dies wie empfohlen in der ES6-Schreibweise zu machen, muss noch in der <i>package.json</i> ein Eintrag gemacht werden."},{"type":"code","crDate":1689081632492,"chDate":1689081646131,"text":"\"type\": \"module\""},{"type":"paragraph","crDate":1689081912808,"chDate":1689081933646,"text":"Dann kann mit <i>import</i> das express-Modul eingebunden werden."},{"type":"code","crDate":1689081723629,"chDate":1689081771890,"text":"import express from 'express';"},{"type":"paragraph","crDate":1689081942197,"chDate":1689082193298,"text":"Im n√§chsten Schritt wird mit Hilfe der importierten express-Funktion ein Objekt erstellt, das alle Methoden zur Verf√ºgung stellt, die zum Betrieb eines Servers alle notwendigen Funktionen bereitstellt."},{"type":"code","crDate":1689082389197,"chDate":1689085138052,"text":"import express from 'express';\nconst server = express();"},{"type":"paragraph","crDate":1689082400011,"chDate":1689084414466,"text":"Schlie√ülich wird der Server gestartet.\nDas bedeutet, dass Express auf eine HTTP-Kommunikationsanfrage √ºber einen Netzwerk-Port wartet. Der Standard-Port ist 80, falls ein anderer Port gew√ºnscht ist, muss dieser gr√∂√üer als 1000 sein."},{"type":"code","crDate":1689084433002,"chDate":1689085133554,"text":"import express from 'express';\nconst server = express();\n\nserver.listen(80, err => {\n if(err) console.log(err)\n else console.log('Server l√§uft');\n});\n"},{"type":"paragraph","crDate":1689084612707,"chDate":1689085463379,"text":"Zu diesem Zeitpunkt kann √ºber einen Browser die Adresse <a href=\"http://localhost\">localhost</a> bzw. <a href=\"http://127.0.0.1\">127.0.0.1<a> aufgerufen werden. Dies f√ºhrt zwar zu einer Meldung, dass keine Seite geladen werden konnte. Diese Meldung ist allerdings ein Erfolg, da sie von Express erzeugt wurde und die Aussage korrekt ist. \nDer Server reagiert zwar, er erf√ºllt aber noch nicht die Kernaufgabe eines Webservers: Ausliefern von Dateien, die vom Client angefordert wurden.\nDazu m√ºssen wir noch eine <i>Middleware</i> einbinden, die ein Verzeichnis f√ºr den Browser freigibt. Dieses Verzeichnis muss nat√ºrlich existieren ü§ì. \nDie Middleware wird aus der <i>static()</i>-Methode des Express-Moduls geladen und ihr wird der relative Pfad zum <i>DocumentRoot</i> √ºbergeben. D.h. zu jenem Ordner, aus dem der Browser Dateien laden darf. Die Middleware wird mittels der <i>use()</i>-Methode eingebunden.\nMehr zu Middleware auf der entsprechenden Unterseite."},{"type":"code","crDate":1689085352244,"chDate":1689085376265,"text":"import express from 'express';\nconst server = express();\n\nserver.use(express.static('public'));\n\nserver.listen(80, err => {\n if(err) console.log(err)\n else console.log('Server l√§uft');\n});\n"},{"type":"subheader","crDate":1689137643674,"chDate":1689137646889,"text":"Gimmicks"},{"type":"paragraph","crDate":1689137296284,"chDate":1689140333955,"text":"Bis jetzt muss noch beim Aufrufen einer bestimmten Seite immer die Endung .html mitgegeben werden. Auf Dauer ist das l√§stig und kann mit einer Zusatzfunktion beseitigt werden. Die <i>static()</i>-Middleware kann auch ein Options-Objekt annehmen. \nIn diesem Objekt k√∂nnen verschiedene Optionen aktiviert werden, von denen die Option <i>extensions</i> vermutlich die meistbenutzte ist. Sie bekommt ein Array √ºbergeben, welches Suffixe enth√§lt, die ausprobiert werden, falls der angefragte Pfad nicht gefunden wurde.\nIm Beispiel unten kann die Datei <i>mypage.html</i> durch Aufruf von <i>http://localhost/mypage</i> ge√∂ffnet werden."},{"type":"code","crDate":1689139220340,"chDate":1689139228867,"text":"import express from 'express';\nconst server = express();\n\nserver.use(express.static('public', {\n extensions:['html', 'htm']\n}));\n\nserver.listen(80, err => {\n if(err) console.log(err)\n else console.log('Server l√§uft');\n});"}]}