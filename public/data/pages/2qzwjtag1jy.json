{"content":[{"type":"paragraph","crDate":1707226862206,"chDate":1707228944818,"text":"Function ist ein eigener Datentyp. Eine Überprüfung per typeof liefert <i>function</i> als String zurück.\nFunktionen werden als Referenz kopiert wie Arrays und Objekte auch."},{"type":"subheader","crDate":1707227101792,"chDate":1707227692204,"text":"Erweiterbar"},{"type":"paragraph","crDate":1707227156506,"chDate":1707228114370,"text":"Da eine Funktion in JS ein Element wie jedes andere ist (sog. <i>first class citizen</i>), kann sie durch beliebige zusätzliche Attribute erweitert werden.\nSo kann an eine Funktion zusätzliche Information übergeben werden.\nHinweis: jQuery ist auf diese Weise aufgebaut.\nIm <i>Beispiel</i> unten wird eine Funktion aufgerufen und Parameter übergeben. Das Ergebnis wird in einem <i>zusätzlichen Attribut</i> der Funktion gespeichert. Auf diese Weise kann das Ergebnis dann beliebig oft ausgelesen werden, ohne den Code erneut ausführen zu müssen. Solange, bis die Funktion mit anderen Parametern aufgerufen und das result überschrieben wird. "},{"type":"code","crDate":1707227695058,"chDate":1707227713344,"text":"const funcWithRes = (a, b, c) => {\n funcWithRes.result = a * b * c;\n}\n\nfuncWithRes(3, 4, 5);\nconsole.log(funcWithRes.result);\nconsole.log(funcWithRes.result);\n        \nfuncWithRes(6,8,1);\nconsole.log(funcWithRes.result);"}]}