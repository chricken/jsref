{"content":[{"type":"subheader","crDate":1726668902280,"chDate":1726668904435,"text":"Mehrere Promises"},{"type":"paragraph","crDate":1726668914571,"chDate":1726668915493,"text":"Die statische <i>all()</i>-Methode des Promise-Constructors erlaubt es, mehrere Promises gleichzeitig zu verarbeiten. \nDie Methode bekommt ein Array aus Promises übergeben, Die <i>then()</i>-Methode wird ausgeführt, sobald alle Promises erfüllt sind.\nFalls mindestens ein Promise abgelehnt wird, wird die <i>catch()</i>-Methode getriggert."},{"type":"code","crDate":1726668927180,"chDate":1726668928121,"text":"const loadURL = url => {\n return fetch(url).then(\n  res => res.json()\n )\n}\n\nPromise.all([\n loadURL('https://dummyjson.com/products/1'),\n loadURL('https://dummyjson.com/products/2'),\n loadURL('https://dummyjson.com/products/3'),\n loadURL('https://dummyjson.com/products/4'),\n loadURL('https://dummyjson.com/products/5'),\n]).then(\n res => console.log(res)\n).catch(\n err => console.warn(err)\n)"},{"type":"subheader","crDate":1726668958697,"chDate":1726668962299,"text":"Erster Promise"},{"type":"paragraph","crDate":1726668974071,"chDate":1726668975597,"text":"Die <i>race()</i>-Methode nimmt einen Array aus Promises an und führt die then()-Methode aus, sobald der erste Promise erfüllt ist. Die Methode bekommt nur das Ergebnis des zuerst erfüllten Promises übergeben."},{"type":"code","crDate":1726668988312,"chDate":1726668990154,"text":"const loadURL = url => {\n return fetch(url).then(\n  res => res.json()\n )\n}\n\nPromise.race([\n loadURL('https://dummyjson.com/products/1'),\n loadURL('https://dummyjson.com/products/2'),\n loadURL('https://dummyjson.com/products/3'),\n loadURL('https://dummyjson.com/products/4'),\n loadURL('https://dummyjson.com/products/5'),\n]).then(\n res => console.log(res)\n).catch(\n err => console.warn(err)\n)"},{"type":"subheader","crDate":1726669046139,"chDate":1726669053074,"text":"Der erstbeste"},{"type":"paragraph","crDate":1726669055197,"chDate":1726669063381,"text":"Die <i>any()</i>-Methode bekommt ein Array aus Promises übergeben und liefert das erste Ergebnis, das kein Fehler ist."},{"type":"code","crDate":1726669074229,"chDate":1726669083805,"text":"const loadURL = url => {\n return fetch(url).then(\n  res => res.json()\n )\n}\n\nPromise.any([\n loadURL('https://dummyjson.com/products/1'),\n loadURL('https://dummyjson.com/blahblah/2'),\n loadURL('https://dummyjson.com/yadda/3'),\n loadURL('https://dummyjson.com/products/4'),\n loadURL('https://dummyjson.com/products/5'),\n]).then(\n res => console.log(res)\n).catch(\n err => console.warn(err)\n)"}]}