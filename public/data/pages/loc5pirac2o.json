{"content":[{"type":"paragraph","crDate":1685630861736,"chDate":1685632697014,"text":"Ein <i>Template-Literal</i> oder <i>Template-String</i> ist eine elegante Methode, um Strings zu <i>konkatinieren</i>, also aneinanderzuhängen.\nEin Template-String wird mit einem Backtick (Accent grave) markiert. \nDas besondere daran ist, dass in einem Template-String Javascript ausgeführt werden kann. Auszuführender Code muss in einem Marker <i>${ }</i> stehen.\nDer Rückgabewert des ${ }-Markers wird in den String eingefügt."},{"type":"code","crDate":1685632365480,"chDate":1685632383327,"text":"let x = 12, y = 23;\nlet myString = `${x} * ${y} = ${x * y}`\nconsole.log(myString);  // -> 12 * 23 = 276"},{"type":"paragraph","crDate":1685632623453,"chDate":1685632689332,"text":"Der Inhalt eines ${ }-Markers kann auch komplexer sein."},{"type":"code","crDate":1685632650306,"chDate":1685632652190,"text":"const checkIfPrime = num => {\n    for (let i = 0; i <= num ** (1 / 2); i++) {\n        if (!(num % i)) return false\n    }\n    return true;\n}\n\nlet num = 27;\n\nconsole.log( `${num} ist ${checkIfPrime(num) ? 'eine' : 'keine'} Primzahl` );"}]}