{"content":[{"type":"paragraph","crDate":1707489974119,"chDate":1707490067521,"text":"Mit Hilfe von Eventlistenern können wir Daten aus der Komponente heraus in das Hauptscript bringen."},{"type":"code","crDate":1707491784332,"chDate":1707492077063,"text":"// Web Component\n'use strict';\n\nconst template = document.createElement('div');\ntemplate.innerHTML = `\n&lt;div class=\"container\">\n &lt;p class=\"content\">&lt;/p>\n &lt;button class=\"btn\">Give Random&lt;/button>\n&lt;/div>`\n\nclass RndClick extends HTMLElement {\n constructor() {\n  super();\n  this.root = this.attachShadow({\n   mode: 'closed'\n  })\n  this.root.append(template.cloneNode(true));\n\n  // Zufällige Zahl erzeugen\n  this.rnd = ~~(Math.random() * 1000)\n }\n \n // Eventlistener für Mounting\n connectedCallback() {\n  const content = this.root.querySelector('.content');\n  const btn = this.root.querySelector('.btn');\n  \n  content.innerText = this.rnd;\n  btn.addEventListener('click', () => {\n   this.dispatchEvent(\n    new CustomEvent('squeezed', {\n     detail: {\n      num: this.rnd,\n      target: this.root.querySelector('.container')\n     }\n    })\n   )\n  })\n }\n // Eventlistener für Unmounting\n disconnectedCallback() { }\n}\n\ncustomElements.define('rnd-click', RndClick);"},{"type":"code","crDate":1707491823610,"chDate":1707492073305,"text":"&lt;!-- Einbindung in HTML -->\n&lt;rnd-click>&lt;/rnd-click> &lt;!-- Object { num: 595, target: div.container } -->\n&lt;rnd-click>&lt;/rnd-click> &lt;!-- Object { num: 157, target: div.container } -->\n&lt;rnd-click>&lt;/rnd-click> &lt;!-- Object { num: 833, target: div.container } -->"},{"type":"code","crDate":1707491853713,"chDate":1707491925445,"text":"// Eventlistener einfügen\nconst handleSqueezed = evt => {\n console.log(evt.detail);\n}\n\nconst rndClick = [...document.querySelectorAll('rnd-click')];\nrndClick.forEach(el => {\n el.addEventListener('squeezed', handleSqueezed);\n})"}]}