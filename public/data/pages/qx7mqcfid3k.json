{"content":[{"type":"paragraph","crDate":1753965069980,"chDate":1754388726132,"text":"Typescript ist keine eigene Sprache.\nTypescript ist nichts weiter als ein ein Hilfsmittel, um besseren Code zu schreiben. \nIn der Entwicklungsumgebung kann mit Elementen wie statischer Typisierung, privaten Attributen und mehr gearbeitet werden. Fehler in der Umsetzung werden in der Entwicklungsumgebung auch angezeigt. Allerdings haben diese keine Auswirkung auf den erzeugten Code.\nÜbersehene Fehler (falsche Datentypen, Zugriff auf vermeintlich private Attribute, etc.) werden problemlos kompiliert und erzeugen zur Laufzeit keine Fehler."},{"type":"paragraph","crDate":1754388544080,"chDate":1754388549463,"text":"Typescript-Dateien haben die Endung <i>.ts</i> (<i>.tsx</i> in React).\nDa Typescript seine neuen Möglichkeiten nicht aufzwingt, kann ein normales JS-Programm genommen werden, zu .ts umbenannt werden und dies wird vom Transpiler akzeptiert. Das macht zum Beispiel dann Sinn, wenn ein bestehendes Programm schrittweise zu TS übersetzt werden soll."},{"type":"subheader","crDate":1753965587881,"chDate":1753965591979,"text":"Vorteile"},{"type":"paragraph","crDate":1753965584876,"chDate":1753966056590,"text":"Typescript bietet einige zusätzliche Funktionalitäten, um die Entwicklung von Programmen zu erleichtern und zu beschleunigen. Z.B. private Attribute, Decorators, Interfaces, etc.\nFehler im TS-Code fallen häufig schon während der Entwicklung auf und nicht erst im laufenden Programm."},{"type":"subheader","crDate":1753965595801,"chDate":1754053866872,"text":"Projekt anlegen"},{"type":"paragraph","crDate":1753965602274,"chDate":1753965947606,"text":"Ein Typescript-Programm muss mit einem Transpiler zu Javascript umgewandelt werden, um in einem Browser zu funktionieren.\nDas fügt eine zusätzliche Abhängigkeit und Komplexität hinzu.\nDie Versprechen von Typescript sind übertrieben:\nEs wird versprochen, dass TS schneller sei als JS. Tatsache ist jedoch, dass TY zu JS übersetzt wird, also nicht schneller sein kann, weil es ja eigentlich JS ist. Es ist bestenfalls schneller als schlecht geschriebenes JS.\nEs wird versprochen, das TS sicherer sei. Diese Aussage ist missverständlich und wird häufig falsch verstanden."},{"type":"subheader","crDate":1753966870137,"chDate":1753966875087,"text":"Installation"},{"type":"paragraph","crDate":1753966863312,"chDate":1753966865326,"text":"Um Typescript zu verwenden, muss zunächst die dazugehörige Software installiert werden.\nUm die Auslieferung der Webseite zu vereinfachen, bietet sich außerdem ein Bundler wie Parcel oder ähnliche Tools an.\nDer pragmatischste Weg dazu ist <i>npm</i>. Um die Tools zu installieren, genügt das Anlegen einer <i>package.json</i>-Datei mit folgendem Inhalt:"},{"type":"code","crDate":1753966393125,"chDate":1753966468820,"text":"{\n // andere Angaben\n \"scripts\": {\n  \"start\": \"parcel src/index.html\",\n  \"build\": \"parcel build src/index.html\",\n },\n \"devDependencies\": {\n  \"parcel\": \"^2.9.3\",\n  \"typescript\": \"^5.1.6\"\n }\n}"},{"type":"terminal","crDate":1753966533873,"chDate":1753966954119,"text":"npm install\nnpm start"},{"type":"paragraph","crDate":1754053391983,"chDate":1754053834495,"text":"Wenn das erledigt ist, muss das Projekt selbst noch angelegt werden.\nIm <i>package.json</i> steht der EIntrag:\n<code>\"start\": \"parcel src/index.html\"</code>\nDiese Zeile sagt aus, dass parcel das Projekt im Ordner <i>src</i> erwartet wird. Also legen wir diesen Ordner an und legen unsere Projektdateien wie index.html etc. hier an."}]}