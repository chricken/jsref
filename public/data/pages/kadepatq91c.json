{"content":[{"type":"paragraph","crDate":1715347297784,"chDate":1715350810356,"text":"Das <i>Model-View-Controller</i> (MVC)-Muster wird in der Softwareentwicklung verwendet, um die Struktur und Organisation eines Projekts zu verbessern. \nEs ermöglicht eine klare Trennung der Verantwortlichkeiten zwischen Datenmodell, Benutzeroberfläche und Steuerung.\nDie Umsetzung eines Projekts in MVC bietet mehrere Vorteile, darunter eine verbesserte Wartbarkeit, Testbarkeit und Erweiterbarkeit. Durch die klare Trennung der Verantwortlichkeiten wird der Code übersichtlicher und leichter zu verstehen.\nEs ist wichtig zu beachten, dass die genaue Umsetzung von MVC je nach Framework oder Technologie variieren kann. Dabei kommt es auf die verwendete Sprache, die Umgebung und die Zielsetzung an."},{"type":"subheader","crDate":1715350030400,"chDate":1715350033774,"text":"Model"},{"type":"paragraph","crDate":1715350062972,"chDate":1715350064722,"text":"Das Model repräsentiert die Daten und die Geschäftslogik des Projekts. Es enthält Klassen und Methoden, die für die Verarbeitung und Speicherung von Daten zuständig sind. Das Model stellt die Schnittstelle für den Zugriff auf die Daten bereit und informiert die anderen Komponenten über Änderungen der Daten."},{"type":"code","crDate":1715350069791,"chDate":1715350101872,"text":"'use strict';\n\nclass Model {\n constructor(controller) {\n  this.data = [];\n  this.controller = controller;\n }\n addData(item) {\n  this.data.push(item);\n }\n getData() {\n  return this.data;\n }\n}\n\nexport default Model;"},{"type":"subheader","crDate":1715350188017,"chDate":1715350192464,"text":"View"},{"type":"paragraph","crDate":1715350206864,"chDate":1715350208365,"text":"Die View ist für die Darstellung der Daten zuständig. Sie stellt die Benutzeroberfläche dar, mit der die Benutzer interagieren können. Die View erhält Daten vom Model und zeigt sie in einer für den Benutzer verständlichen Form an. Sie kann auch Eingaben des Benutzers entgegennehmen und an den Controller weiterleiten."},{"type":"code","crDate":1715350210077,"chDate":1715350296367,"text":"'use strict';\n\nclass View {\n constructor(controller) {\n  this.container = document.querySelector('main');\n  this.controller = controller;\n }\n\n render(data) {\n  this.container.innerHTML = '';\n\n  data.forEach(item => {\n   const element = document.createElement('div');\n   element.innerText = item;\n   this.container.appendChild(element);\n  });\n\n  const inputItem = document.createElement('input');\n  inputItem.placeholder = 'New Item';\n  this.container.append(inputItem);\n\n  inputItem.addEventListener('change', () => {\n   this.controller.addItem(inputItem.value);\n   inputItem.value = '';\n  })\n\n  inputItem.focus();\n }\n}\n\nexport default View;"},{"type":"subheader","crDate":1715350303657,"chDate":1715350308704,"text":"Control"},{"type":"paragraph","crDate":1715350317127,"chDate":1715350335143,"text":"Der Controller ist für die Steuerung des Projekts verantwortlich. Er nimmt Eingaben von der View entgegen, verarbeitet sie und aktualisiert das Model entsprechend. Der Controller entscheidet, welche Aktionen ausgeführt werden sollen und welche Daten an die View übergeben werden. Er fungiert als Vermittler zwischen der View und dem Model."},{"type":"code","crDate":1715350336859,"chDate":1715350368070,"text":"'use strict';\nimport Model from './model.js';\nimport View from './view.js';\n\nclass Control {\n constructor() {\n  this.model = new Model(this);\n  this.view = new View(this);\n }\n\n addItem(item) {\n  this.model.addData(item);\n  const data = this.model.getData();\n  this.view.render(data);\n }\n}\n\nexport default Control;"},{"type":"subheader","crDate":1715350424919,"chDate":1715350431052,"text":"Zusammenführen"},{"type":"paragraph","crDate":1715350438162,"chDate":1715350762059,"text":"In der Hauptdatei werden die drei Dateien importiert."},{"type":"code","crDate":1715350434857,"chDate":1715350446487,"text":"'use strict';\n\nimport Control from './control.js';\n\nconst controller = new Control();\n\ncontroller.addItem('Item 1');\ncontroller.addItem('Item 2');"},{"type":"code","crDate":1715350473056,"chDate":1715350840559,"text":"&lt;!DOCTYPE html>\n&lt;html lang=\"de\">\n\n&lt;head>\n &lt;link rel=\"stylesheet\" href=\"./assets/css/styles.css\" />\n &lt;script src=\"./assets/js/index.js\" type=\"module\" defer>&lt;/script>\n&lt;/head>\n\n&lt;body>\n &lt;main>&lt;/main>\n&lt;/body>\n\n&lt;/html>"}]}