{"content":[{"type":"paragraph","crDate":1692883941009,"chDate":1692884170274,"text":"Dem Observer werden DOM-Elemente zugewiesen, auf deren Größenänderung der Observer reagiert."},{"type":"subheader","crDate":1692884196837,"chDate":1692884212420,"text":"Handler"},{"type":"paragraph","crDate":1692884216235,"chDate":1692884769395,"text":"Der Handler bekommt Array aus Objekten übergeben, welche jedes Element wiederspiegeln, dessen Größe sich verändert hat.\nDieses Objekt enthält neben dem <i>target</i> auch die <i>aktuelle Größe</i> in verschiedenen Bezugssystemen."},{"type":"code","crDate":1692884675684,"chDate":1692884788363,"text":"const handleMutation = entries => {\n entries.forEach(entry => {\n  console.clear()\n  console.log(entry);\n  console.log(entry.contentRect.width, entry.contentRect.height);\n })\n}"},{"type":"subheader","crDate":1692884899681,"chDate":1692884941305,"text":"Observer"},{"type":"paragraph","crDate":1692885126451,"chDate":1692885418078,"text":"Der Observer wird mittels des <i>ResizeObserver()</i>-Constructors erstellt. Er bekommt den Handler als Argument übergeben."},{"type":"code","crDate":1692885125116,"chDate":1692885426799,"text":"const myObserver = new ResizeObserver(handleMutation);"},{"type":"subheader","crDate":1692885441893,"chDate":1692885450040,"text":"Observer zuweisen"},{"type":"paragraph","crDate":1692885452340,"chDate":1692885591945,"text":"Zuletzt müssen dem Observer noch die DOM-Elemente übergeben werden, auf deren Größenveränderungen reagiert werden soll."},{"type":"code","crDate":1692885694482,"chDate":1692885697114,"text":"const elements = document.querySelectorAll('textarea');\nelements.forEach(element => myObserver.observe(element));"}]}